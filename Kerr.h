#ifndef KERR_H
#define KERR_H

inline double Kerr_t(state_type& x, double M, double G, double a,double r, double r_X, double r_Y, double r_Z) {
	return (2 * G * M * (G * M * Power(x[7], 2) * Power(r, 3) * Power(Power(a, 2) + Power(r, 2), 3) * (x[2] * r * (Power(a, 2) + Power(r, 2)) * (-2 * Power(a, 2) * x[2] * r + 3 * Power(a, 2) * Power(x[2], 2) * r_X - Power(r, 4) * r_X) - (-(a * x[0]) + x[1] * r) * (-3 * Power(a, 2) * Power(x[2], 2) * Power(r, 2) + Power(r, 6)) * r_Y + (a * x[1] + x[0] * r) * (3 * Power(a, 2) * Power(x[2], 2) * Power(r, 2) - Power(r, 6)) * r_X) + x[7] * x[6] * (Power(a, 2) + Power(r, 2)) * (-(Power(r, 2) * Power(Power(a, 2) + Power(r, 2), 3) * (Power(a, 2) * Power(x[2], 2) + 2 * G * M * Power(r, 3) + Power(r, 4)) * (2 * Power(a, 2) * x[2] * r - 3 * Power(a, 2) * Power(x[2], 2) * r_X + Power(r, 4) * r_X)) + 2 * G * M * Power(r, 4) * (a * x[0] - x[1] * r) * (2 * Power(r, 3) * (a * x[0] - x[1] * r) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + x[1] * Power(r, 2) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 3 * r * (-(a * x[0]) + x[1] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + Power(r, 2) * (a * x[0] - x[1] * r) * (Power(a, 2) + Power(r, 2)) * (2 * Power(a, 2) * x[2] + 4 * Power(r, 3) * r_X) + 4 * x[2] * Power(r, 4) * Power(Power(a, 2) + Power(r, 2), 2) * r_Y - 2 * x[2] * Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_Y) + 2 * G * M * Power(r, 4) * (a * x[1] + x[0] * r) * (2 * Power(r, 3) * (a * x[1] + x[0] * r) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - x[0] * Power(r, 2) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 3 * r * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 2 * Power(r, 2) * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * x[2] + 2 * Power(r, 3) * r_X) - 4 * x[2] * Power(r, 4) * Power(Power(a, 2) + Power(r, 2), 2) * r_X + 2 * x[2] * Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X)) - Power(x[6], 2) * r * (Power(a, 2) + Power(r, 2)) * (Power(Power(a, 2) + Power(r, 2), 3) * (Power(a, 2) * Power(x[2], 2) - Power(r, 4)) * (Power(a, 2) * Power(x[2], 2) + 2 * G * M * Power(r, 3) + Power(r, 4)) * (r - 2 * x[2] * r_X) + G * M * Power(x[2], 2) * r * Power(Power(a, 2) + Power(r, 2), 3) * (2 * Power(r, 5) + Power(a, 2) * Power(x[2], 3) * r_X - 3 * x[2] * Power(r, 4) * r_X) + G * M * Power(r, 2) * (a * x[0] - x[1] * r) * (2 * Power(a, 4) * x[1] * Power(x[2], 2) * Power(r, 3) - 2 * x[1] * Power(r, 9) + 4 * Power(a, 5) * x[0] * Power(x[2], 3) * r * r_X + 2 * Power(a, 2) * x[2] * Power(r, 5) * (x[1] * x[2] - 2 * a * x[0] * r_X) - 2 * a * Power(r, 7) * (a * x[1] + 4 * x[0] * x[2] * r_X) + Power(a, 6) * Power(x[2], 4) * r_Y + 2 * Power(a, 2) * Power(r, 6) * (a * x[0] + x[1] * x[2] * r_X - 3 * Power(x[2], 2) * r_Y) + Power(r, 8) * (2 * a * x[0] + 6 * x[1] * x[2] * r_X - 3 * Power(x[2], 2) * r_Y) - 2 * Power(a, 4) * Power(x[2], 2) * Power(r, 2) * (a * x[0] + 3 * x[1] * x[2] * r_X - Power(x[2], 2) * r_Y) + Power(a, 2) * Power(x[2], 2) * Power(r, 4) * (-2 * a * x[0] - 2 * x[1] * x[2] * r_X + (-3 * Power(a, 2) + Power(x[2], 2)) * r_Y)) + G * M * Power(r, 2) * (a * x[1] + x[0] * r) * (2 * Power(r, 2) * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) - 4 * x[2] * Power(r, 3) * (a * x[1] + x[0] * r) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 2 * x[0] * x[2] * Power(r, 2) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 4 * x[2] * r * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 4 * x[2] * Power(r, 2) * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * x[2] + 2 * Power(r, 3) * r_X) + 4 * Power(x[2], 2) * Power(r, 4) * Power(Power(a, 2) + Power(r, 2), 2) * r_X - Power(x[2], 2) * Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X)) - x[7] * x[5] * (Power(a, 2) + Power(r, 2)) * (-(Power(Power(a, 2) + Power(r, 2), 3) * (Power(a, 2) * Power(x[2], 2) + 2 * G * M * Power(r, 3) + Power(r, 4)) * (3 * Power(a, 2) * Power(x[2], 2) * Power(r, 2) - Power(r, 6)) * r_Y) - 2 * G * M * x[2] * Power(r, 3) * (Power(a, 2) + Power(r, 2)) * (2 * Power(r, 3) * (a * x[0] - x[1] * r) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + x[1] * Power(r, 2) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 3 * r * (-(a * x[0]) + x[1] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + Power(r, 2) * (a * x[0] - x[1] * r) * (Power(a, 2) + Power(r, 2)) * (2 * Power(a, 2) * x[2] + 4 * Power(r, 3) * r_X) + 4 * x[2] * Power(r, 4) * Power(Power(a, 2) + Power(r, 2), 2) * r_Y - 2 * x[2] * Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_Y) + 2 * G * M * Power(r, 5) * (a * x[1] + x[0] * r) * (2 * Power(a, 3) * Power(r, 5) + 3 * Power(a, 5) * Power(x[2], 2) * (x[1] * r_Y + x[0] * r_X) + Power(a, 3) * Power(x[2], 2) * Power(r, 2) * (x[1] * r_Y + x[0] * r_X) - Power(a, 3) * Power(r, 4) * (x[1] * r_Y + x[0] * r_X) - 3 * a * Power(r, 6) * (x[1] * r_Y + x[0] * r_X) + 2 * Power(a, 4) * Power(x[2], 2) * r * (a + 2 * x[0] * r_Y - 2 * x[1] * r_X) + 2 * Power(a, 2) * Power(x[2], 2) * Power(r, 3) * (a + x[0] * r_Y - x[1] * r_X) + 2 * Power(r, 7) * (a - x[0] * r_Y + x[1] * r_X))) - x[7] * x[4] * (Power(a, 2) + Power(r, 2)) * (-(Power(Power(a, 2) + Power(r, 2), 3) * (Power(a, 2) * Power(x[2], 2) + 2 * G * M * Power(r, 3) + Power(r, 4)) * (3 * Power(a, 2) * Power(x[2], 2) * Power(r, 2) - Power(r, 6)) * r_X) + 2 * G * M * x[2] * Power(r, 3) * (Power(a, 2) + Power(r, 2)) * (2 * Power(r, 3) * (a * x[1] + x[0] * r) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - x[0] * Power(r, 2) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 3 * r * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 2 * Power(r, 2) * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * x[2] + 2 * Power(r, 3) * r_X) - 4 * x[2] * Power(r, 4) * Power(Power(a, 2) + Power(r, 2), 2) * r_X + 2 * x[2] * Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X) + 2 * G * M * Power(r, 5) * (a * x[0] - x[1] * r) * (2 * Power(a, 3) * Power(r, 5) + 3 * Power(a, 5) * Power(x[2], 2) * (x[1] * r_Y + x[0] * r_X) + Power(a, 3) * Power(x[2], 2) * Power(r, 2) * (x[1] * r_Y + x[0] * r_X) - Power(a, 3) * Power(r, 4) * (x[1] * r_Y + x[0] * r_X) - 3 * a * Power(r, 6) * (x[1] * r_Y + x[0] * r_X) + 2 * Power(a, 4) * Power(x[2], 2) * r * (a + 2 * x[0] * r_Y - 2 * x[1] * r_X) + 2 * Power(a, 2) * Power(x[2], 2) * Power(r, 3) * (a + x[0] * r_Y - x[1] * r_X) + 2 * Power(r, 7) * (a - x[0] * r_Y + x[1] * r_X))) - Power(x[4], 2) * Power(r, 2) * (-(G * M * Power(r, 3) * Power(a * x[1] + x[0] * r, 2) * (4 * Power(r, 4) * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * r_X + 4 * Power(r, 2) * (a * x[1] + x[0] * r) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 3 * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 2 * r * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * (r + x[0] * r_X))) + Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + 2 * G * M * Power(r, 3) + Power(r, 4)) * (4 * Power(r, 4) * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * r_X + 2 * Power(r, 2) * (a * x[1] + x[0] * r) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 3 * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - r * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * (r + x[0] * r_X)) + G * M * x[2] * r * (Power(a, 2) + Power(r, 2)) * (4 * Power(r, 3) * Power(a * x[1] + x[0] * r, 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 2 * x[0] * Power(r, 2) * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 3 * r * Power(a * x[1] + x[0] * r, 2) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 2 * Power(r, 2) * Power(a * x[1] + x[0] * r, 2) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * x[2] + 2 * Power(r, 3) * r_X) - 8 * x[2] * Power(r, 4) * (a * x[1] + x[0] * r) * Power(Power(a, 2) + Power(r, 2), 2) * r_X - 4 * x[2] * Power(r, 2) * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 4 * x[2] * (a * x[1] + x[0] * r) * Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 2 * x[2] * r * Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * (r + x[0] * r_X)) - G * M * Power(r, 3) * (a * x[0] - x[1] * r) * (-2 * Power(a, 4) * x[1] * Power(x[2], 2) * Power(r, 3) + 2 * Power(a, 2) * x[1] * (-2 * Power(a, 2) + Power(x[2], 2)) * Power(r, 5) + 2 * x[1] * Power(r, 9) - 3 * Power(a, 6) * x[1] * Power(x[2], 2) * (x[1] * r_Y + 2 * x[0] * r_X) - 2 * a * Power(r, 7) * (a * x[1] - 4 * x[0] * x[1] * r_Y - 4 * (Power(x[0], 2) - Power(x[1], 2)) * r_X) - 4 * Power(a, 5) * Power(x[2], 2) * r * (a * x[1] + 2 * x[0] * x[1] * r_Y + 2 * (Power(x[0], 2) - Power(x[1], 2)) * r_X) + Power(a, 2) * Power(r, 4) * (-6 * a * x[0] * Power(x[2], 2) + (Power(a, 2) * Power(x[1], 2) - Power(x[0], 2) * Power(x[2], 2)) * r_Y + 2 * x[0] * x[1] * (Power(a, 2) + Power(x[2], 2)) * r_X) + Power(a, 2) * Power(r, 6) * (-((Power(x[0], 2) - 5 * Power(x[1], 2)) * r_Y) - 6 * x[0] * (a - 2 * x[1] * r_X)) + Power(a, 4) * Power(x[2], 2) * Power(r, 2) * ((-5 * Power(x[0], 2) + Power(x[1], 2)) * r_Y - 6 * x[0] * (a - 2 * x[1] * r_X)) + 3 * x[0] * Power(r, 8) * (x[0] * r_Y - 2 * (a + x[1] * r_X)))) + Power(x[5], 2) * Power(r, 2) * (Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + 2 * G * M * Power(r, 3) + Power(r, 4)) * (Power(r, 8) - 3 * Power(a, 5) * x[0] * Power(x[2], 2) * r_Y + 4 * Power(a, 4) * x[1] * Power(x[2], 2) * r * r_Y + 2 * Power(a, 2) * x[1] * Power(x[2], 2) * Power(r, 3) * r_Y - 2 * x[1] * Power(r, 7) * r_Y + Power(a, 3) * Power(x[2], 2) * Power(r, 2) * (a - x[0] * r_Y) + a * Power(r, 6) * (a + 3 * x[0] * r_Y) + Power(a, 2) * Power(r, 4) * (Power(x[2], 2) + a * x[0] * r_Y)) - G * M * Power(r, 3) * Power(a * x[0] - x[1] * r, 2) * (4 * Power(r, 4) * (a * x[0] - x[1] * r) * (Power(a, 2) + Power(r, 2)) * r_Y + 4 * Power(r, 2) * (a * x[0] - x[1] * r) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_Y - 3 * (a * x[0] - x[1] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_Y + 2 * r * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * (r + x[1] * r_Y)) - G * M * x[2] * r * (Power(a, 2) + Power(r, 2)) * (4 * Power(r, 3) * Power(a * x[0] - x[1] * r, 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 2 * x[1] * Power(r, 2) * (a * x[0] - x[1] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 3 * r * Power(a * x[0] - x[1] * r, 2) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 2 * Power(r, 2) * Power(a * x[0] - x[1] * r, 2) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * x[2] + 2 * Power(r, 3) * r_X) + 8 * x[2] * Power(r, 4) * (a * x[0] - x[1] * r) * Power(Power(a, 2) + Power(r, 2), 2) * r_Y + 4 * x[2] * Power(r, 2) * (a * x[0] - x[1] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_Y - 4 * x[2] * (a * x[0] - x[1] * r) * Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_Y + 2 * x[2] * r * Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * (r + x[1] * r_Y)) - G * M * Power(r, 3) * (a * x[1] + x[0] * r) * (-2 * Power(a, 4) * x[0] * Power(x[2], 2) * Power(r, 3) + 2 * Power(a, 2) * x[0] * (-2 * Power(a, 2) + Power(x[2], 2)) * Power(r, 5) + 2 * x[0] * Power(r, 9) - 3 * Power(a, 6) * x[0] * Power(x[2], 2) * (2 * x[1] * r_Y + x[0] * r_X) + 3 * x[1] * Power(r, 8) * (2 * a - 2 * x[0] * r_Y + x[1] * r_X) + Power(a, 4) * Power(x[2], 2) * Power(r, 2) * (6 * a * x[1] + 12 * x[0] * x[1] * r_Y + (Power(x[0], 2) - 5 * Power(x[1], 2)) * r_X) + Power(a, 2) * Power(r, 6) * (6 * a * x[1] + 12 * x[0] * x[1] * r_Y + (5 * Power(x[0], 2) - Power(x[1], 2)) * r_X) + Power(a, 2) * Power(r, 4) * (6 * a * x[1] * Power(x[2], 2) + 2 * x[0] * x[1] * (Power(a, 2) + Power(x[2], 2)) * r_Y + (Power(a, 2) * Power(x[0], 2) - Power(x[1], 2) * Power(x[2], 2)) * r_X) - 4 * Power(a, 5) * Power(x[2], 2) * r * (2 * (Power(x[0], 2) - Power(x[1], 2)) * r_Y + x[0] * (a - 2 * x[1] * r_X)) - 2 * a * Power(r, 7) * (-4 * (Power(x[0], 2) - Power(x[1], 2)) * r_Y + x[0] * (a + 4 * x[1] * r_X)))) + x[4] * x[5] * Power(r, 2) * (2 * G * M * Power(r, 3) * Power(a * x[1] + x[0] * r, 2) * (4 * Power(r, 4) * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * r_Y + 4 * Power(r, 2) * (a * x[1] + x[0] * r) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_Y - 3 * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_Y - 2 * r * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * (a + x[0] * r_Y)) + Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + 2 * G * M * Power(r, 3) + Power(r, 4)) * ((3 * Power(a, 5) * x[1] * Power(x[2], 2) + 4 * Power(a, 4) * x[0] * Power(x[2], 2) * r + Power(a, 3) * x[1] * Power(x[2], 2) * Power(r, 2) + 2 * Power(a, 2) * x[0] * Power(x[2], 2) * Power(r, 3) - Power(a, 3) * x[1] * Power(r, 4) - 3 * a * x[1] * Power(r, 6) - 2 * x[0] * Power(r, 7)) * r_Y + (-3 * Power(a, 5) * x[0] * Power(x[2], 2) + 4 * Power(a, 4) * x[1] * Power(x[2], 2) * r - Power(a, 3) * x[0] * Power(x[2], 2) * Power(r, 2) + 2 * Power(a, 2) * x[1] * Power(x[2], 2) * Power(r, 3) + Power(a, 3) * x[0] * Power(r, 4) + 3 * a * x[0] * Power(r, 6) - 2 * x[1] * Power(r, 7)) * r_X) - 2 * G * M * Power(r, 3) * Power(a * x[0] - x[1] * r, 2) * (4 * Power(r, 4) * (a * x[0] - x[1] * r) * (Power(a, 2) + Power(r, 2)) * r_X + 4 * Power(r, 2) * (a * x[0] - x[1] * r) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 3 * (a * x[0] - x[1] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 2 * r * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * (a - x[1] * r_X)) + 2 * G * M * x[2] * r * (Power(a, 2) + Power(r, 2)) * (2 * Power(a, 5) * x[2] * Power(r, 4) * (x[1] * r_Y - x[0] * r_X) + 2 * Power(a, 7) * Power(x[2], 3) * (-(x[1] * r_Y) + x[0] * r_X) - 3 * Power(a, 6) * Power(x[2], 2) * r * (x[0] * x[1] * r_X + x[0] * x[2] * r_Y + x[1] * x[2] * r_X) + 2 * Power(a, 5) * x[2] * Power(r, 2) * (a * x[0] * x[1] + 2 * (-Power(x[0], 2) + Power(x[1], 2)) * x[2] * r_X - x[1] * Power(x[2], 2) * r_Y + x[0] * Power(x[2], 2) * r_X) + 2 * Power(a, 4) * x[2] * Power(r, 3) * (a * Power(x[0], 2) - a * Power(x[1], 2) + 3 * x[0] * x[1] * x[2] * r_X - 2 * x[0] * Power(x[2], 2) * r_Y - 2 * x[1] * Power(x[2], 2) * r_X) - 2 * Power(a, 2) * x[2] * Power(r, 6) * (-3 * a * x[1] * r_Y + x[0] * (x[1] + 3 * a * r_X)) + 4 * a * Power(r, 8) * ((Power(x[0], 2) - Power(x[1], 2)) * r_X + x[2] * (x[1] * r_Y - x[0] * r_X)) + 2 * Power(a, 2) * Power(r, 7) * (3 * x[0] * x[1] * r_X + 2 * x[2] * (x[0] * r_Y + x[1] * r_X)) + Power(r, 9) * (-3 * x[0] * x[1] * r_X + 3 * x[2] * (x[0] * r_Y + x[1] * r_X)) + Power(a, 2) * Power(r, 5) * (x[0] * x[1] * (Power(a, 2) + Power(x[2], 2)) * r_X + x[2] * (2 * a * (Power(x[0], 2) - Power(x[1], 2)) + x[0] * (Power(a, 2) - Power(x[2], 2)) * r_Y + x[1] * (Power(a, 2) - Power(x[2], 2)) * r_X)))) - x[5] * x[6] * r * (2 * G * M * Power(r, 4) * Power(a * x[0] - x[1] * r, 2) * (4 * Power(r, 2) * (a * x[0] - x[1] * r) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 2 * x[1] * r * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 3 * (a * x[0] - x[1] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + r * (a * x[0] - x[1] * r) * (Power(a, 2) + Power(r, 2)) * (2 * Power(a, 2) * x[2] + 4 * Power(r, 3) * r_X)) + 2 * G * M * Power(x[2], 3) * r * Power(Power(a, 2) + Power(r, 2), 4) * (Power(a, 2) * Power(x[2], 2) - 3 * Power(r, 4)) * r_Y - Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + 2 * G * M * Power(r, 3) + Power(r, 4)) * (2 * Power(r, 3) * (a * x[0] - x[1] * r) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + x[1] * Power(r, 2) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 3 * r * (-(a * x[0]) + x[1] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + Power(r, 2) * (a * x[0] - x[1] * r) * (Power(a, 2) + Power(r, 2)) * (2 * Power(a, 2) * x[2] + 4 * Power(r, 3) * r_X) - 4 * x[2] * Power(r, 4) * Power(Power(a, 2) + Power(r, 2), 2) * r_Y + 2 * x[2] * Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_Y) + 2 * G * M * Power(r, 3) * (a * x[1] + x[0] * r) * (2 * Power(a, 7) * Power(x[2], 3) * (x[1] * r_Y + x[0] * r_X) - 2 * Power(a, 5) * x[2] * Power(r, 4) * (x[1] * r_Y + x[0] * r_X) + 2 * Power(a, 5) * x[2] * Power(r, 2) * (a * x[0] * x[1] + 2 * (-Power(x[0], 2) + Power(x[1], 2)) * x[2] * r_X + x[1] * Power(x[2], 2) * r_Y + x[0] * Power(x[2], 2) * r_X) + 2 * Power(a, 4) * x[2] * Power(r, 3) * (a * Power(x[0], 2) - a * Power(x[1], 2) + 2 * a * Power(x[2], 2) + 3 * x[0] * x[1] * x[2] * r_X + 2 * x[0] * Power(x[2], 2) * r_Y - 2 * x[1] * Power(x[2], 2) * r_X) - 2 * Power(a, 2) * x[2] * Power(r, 6) * (3 * a * x[1] * r_Y + x[0] * (x[1] + 3 * a * r_X)) + 4 * a * Power(r, 8) * ((Power(x[0], 2) - Power(x[1], 2)) * r_X - x[2] * (x[1] * r_Y + x[0] * r_X)) + Power(a, 6) * Power(x[2], 2) * r * (-3 * x[0] * x[1] * r_X + x[2] * (2 * a + 3 * x[0] * r_Y - 3 * x[1] * r_X)) + 2 * Power(a, 2) * Power(r, 7) * (3 * x[0] * x[1] * r_X + 2 * x[2] * (a - x[0] * r_Y + x[1] * r_X)) + Power(r, 9) * (-3 * x[0] * x[1] * r_X + x[2] * (2 * a - 3 * x[0] * r_Y + 3 * x[1] * r_X)) + Power(a, 2) * Power(r, 5) * (x[0] * x[1] * (Power(a, 2) + Power(x[2], 2)) * r_X + x[2] * (2 * a * (Power(a, 2) + Power(x[0], 2) - Power(x[1], 2) + Power(x[2], 2)) + x[0] * (-Power(a, 2) + Power(x[2], 2)) * r_Y + x[1] * (Power(a, 2) - Power(x[2], 2)) * r_X)))) + x[4] * x[6] * r * (2 * G * M * Power(r, 4) * Power(a * x[1] + x[0] * r, 2) * (4 * Power(r, 2) * (a * x[1] + x[0] * r) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 2 * x[0] * r * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 3 * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 2 * r * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * x[2] + 2 * Power(r, 3) * r_X)) - 2 * G * M * Power(x[2], 3) * r * Power(Power(a, 2) + Power(r, 2), 4) * (Power(a, 2) * Power(x[2], 2) - 3 * Power(r, 4)) * r_X - Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + 2 * G * M * Power(r, 3) + Power(r, 4)) * (2 * Power(r, 3) * (a * x[1] + x[0] * r) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - x[0] * Power(r, 2) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 3 * r * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 2 * Power(r, 2) * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * x[2] + 2 * Power(r, 3) * r_X) + 4 * x[2] * Power(r, 4) * Power(Power(a, 2) + Power(r, 2), 2) * r_X - 2 * x[2] * Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X) + 2 * G * M * Power(r, 3) * (a * x[0] - x[1] * r) * (-2 * Power(a, 7) * Power(x[2], 3) * (x[1] * r_Y + x[0] * r_X) + 2 * Power(a, 5) * x[2] * Power(r, 4) * (x[1] * r_Y + x[0] * r_X) + 2 * Power(a, 2) * x[2] * Power(r, 6) * (-(x[0] * x[1]) + 3 * a * x[1] * r_Y + 3 * a * x[0] * r_X) + 2 * Power(a, 5) * x[2] * Power(r, 2) * (a * x[0] * x[1] + 2 * (-Power(x[0], 2) + Power(x[1], 2)) * x[2] * r_X - x[1] * Power(x[2], 2) * r_Y - x[0] * Power(x[2], 2) * r_X) + 2 * Power(a, 4) * x[2] * Power(r, 3) * (a * Power(x[0], 2) - a * Power(x[1], 2) - 2 * a * Power(x[2], 2) + 3 * x[0] * x[1] * x[2] * r_X - 2 * x[0] * Power(x[2], 2) * r_Y + 2 * x[1] * Power(x[2], 2) * r_X) + 4 * a * Power(r, 8) * ((Power(x[0], 2) - Power(x[1], 2)) * r_X + x[2] * (x[1] * r_Y + x[0] * r_X)) - Power(a, 6) * Power(x[2], 2) * r * (3 * x[0] * x[1] * r_X + x[2] * (2 * a + 3 * x[0] * r_Y - 3 * x[1] * r_X)) + 2 * Power(a, 2) * Power(r, 7) * (3 * x[0] * x[1] * r_X - 2 * x[2] * (a - x[0] * r_Y + x[1] * r_X)) - Power(r, 9) * (3 * x[0] * x[1] * r_X + x[2] * (2 * a - 3 * x[0] * r_Y + 3 * x[1] * r_X)) + Power(a, 2) * Power(r, 5) * (x[0] * x[1] * (Power(a, 2) + Power(x[2], 2)) * r_X - x[2] * (2 * a * (Power(a, 2) - Power(x[0], 2) + Power(x[1], 2) + Power(x[2], 2)) + x[0] * (-Power(a, 2) + Power(x[2], 2)) * r_Y + x[1] * (Power(a, 2) - Power(x[2], 2)) * r_X)))))) / (Power(Power(a, 2) + Power(r, 2), 4) * Power(Power(a, 2) * Power(x[2], 2) + Power(r, 4), 3));
}

inline double Kerr_x(state_type& x, double M, double G, double a, double r, double r_X, double r_Y, double r_Z) {
	return (G * M * (-(Power(x[7], 2) * Power(Power(a, 2) + Power(r, 2), 3) * (-2 * G * M * x[2] * Power(r, 4) * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (2 * Power(a, 2) * x[2] * r - 3 * Power(a, 2) * Power(x[2], 2) * r_X + Power(r, 4) * r_X) - 2 * G * M * Power(r, 3) * (a * x[1] + x[0] * r) * (-(a * x[0]) + x[1] * r) * (-3 * Power(a, 2) * Power(x[2], 2) * Power(r, 2) + Power(r, 6)) * r_Y - (-3 * Power(a, 2) * Power(x[2], 2) * Power(r, 2) + Power(r, 6)) * (2 * G * M * Power(r, 3) * Power(a * x[1] + x[0] * r, 2) - Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4))) * r_X)) - 2 * x[7] * x[6] * r * (Power(a, 2) + Power(r, 2)) * (-2 * G * M * Power(r, 4) * (a * x[1] + x[0] * r) * Power(Power(a, 2) + Power(r, 2), 3) * (2 * Power(a, 2) * x[2] * r - 3 * Power(a, 2) * Power(x[2], 2) * r_X + Power(r, 4) * r_X) + 2 * G * M * Power(r, 3) * (a * x[1] + x[0] * r) * (a * x[0] - x[1] * r) * (2 * Power(r, 3) * (a * x[0] - x[1] * r) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + x[1] * Power(r, 2) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 3 * r * (-(a * x[0]) + x[1] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + Power(r, 2) * (a * x[0] - x[1] * r) * (Power(a, 2) + Power(r, 2)) * (2 * Power(a, 2) * x[2] + 4 * Power(r, 3) * r_X) + 4 * x[2] * Power(r, 4) * Power(Power(a, 2) + Power(r, 2), 2) * r_Y - 2 * x[2] * Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_Y) + (2 * G * M * Power(r, 3) * Power(a * x[1] + x[0] * r, 2) - Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4))) * (2 * Power(r, 3) * (a * x[1] + x[0] * r) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - x[0] * Power(r, 2) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 3 * r * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 2 * Power(r, 2) * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * x[2] + 2 * Power(r, 3) * r_X) - 4 * x[2] * Power(r, 4) * Power(Power(a, 2) + Power(r, 2), 2) * r_X + 2 * x[2] * Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X)) + Power(x[6], 2) * (Power(a, 2) + Power(r, 2)) * (-4 * G * M * Power(r, 4) * (a * x[1] + x[0] * r) * Power(Power(a, 2) + Power(r, 2), 3) * (-(Power(a, 2) * Power(x[2], 2)) + Power(r, 4)) * (r - 2 * x[2] * r_X) + 2 * G * M * Power(x[2], 2) * Power(r, 2) * (a * x[1] + x[0] * r) * Power(Power(a, 2) + Power(r, 2), 3) * (2 * Power(r, 5) + Power(a, 2) * Power(x[2], 3) * r_X - 3 * x[2] * Power(r, 4) * r_X) + 2 * G * M * Power(r, 3) * (a * x[1] + x[0] * r) * (a * x[0] - x[1] * r) * (2 * Power(a, 4) * x[1] * Power(x[2], 2) * Power(r, 3) - 2 * x[1] * Power(r, 9) + 4 * Power(a, 5) * x[0] * Power(x[2], 3) * r * r_X + 2 * Power(a, 2) * x[2] * Power(r, 5) * (x[1] * x[2] - 2 * a * x[0] * r_X) - 2 * a * Power(r, 7) * (a * x[1] + 4 * x[0] * x[2] * r_X) + Power(a, 6) * Power(x[2], 4) * r_Y + 2 * Power(a, 2) * Power(r, 6) * (a * x[0] + x[1] * x[2] * r_X - 3 * Power(x[2], 2) * r_Y) + Power(r, 8) * (2 * a * x[0] + 6 * x[1] * x[2] * r_X - 3 * Power(x[2], 2) * r_Y) - 2 * Power(a, 4) * Power(x[2], 2) * Power(r, 2) * (a * x[0] + 3 * x[1] * x[2] * r_X - Power(x[2], 2) * r_Y) + Power(a, 2) * Power(x[2], 2) * Power(r, 4) * (-2 * a * x[0] - 2 * x[1] * x[2] * r_X + (-3 * Power(a, 2) + Power(x[2], 2)) * r_Y)) + (2 * G * M * Power(r, 3) * Power(a * x[1] + x[0] * r, 2) - Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4))) * (2 * Power(r, 2) * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) - 4 * x[2] * Power(r, 3) * (a * x[1] + x[0] * r) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 2 * x[0] * x[2] * Power(r, 2) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 4 * x[2] * r * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 4 * x[2] * Power(r, 2) * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * x[2] + 2 * Power(r, 3) * r_X) + 4 * Power(x[2], 2) * Power(r, 4) * Power(Power(a, 2) + Power(r, 2), 2) * r_X - Power(x[2], 2) * Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X)) + 4 * G * M * x[7] * x[4] * Power(r, 3) * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(Power(a, 2) + Power(r, 2), 3) * (-3 * Power(a, 2) * Power(x[2], 2) * Power(r, 2) + Power(r, 6)) * r_X + x[2] * (Power(a, 2) + Power(r, 2)) * (2 * Power(r, 3) * (a * x[1] + x[0] * r) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - x[0] * Power(r, 2) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 3 * r * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 2 * Power(r, 2) * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * x[2] + 2 * Power(r, 3) * r_X) - 4 * x[2] * Power(r, 4) * Power(Power(a, 2) + Power(r, 2), 2) * r_X + 2 * x[2] * Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X) + Power(r, 2) * (a * x[0] - x[1] * r) * (2 * Power(a, 3) * Power(r, 5) + 3 * Power(a, 5) * Power(x[2], 2) * (x[1] * r_Y + x[0] * r_X) + Power(a, 3) * Power(x[2], 2) * Power(r, 2) * (x[1] * r_Y + x[0] * r_X) - Power(a, 3) * Power(r, 4) * (x[1] * r_Y + x[0] * r_X) - 3 * a * Power(r, 6) * (x[1] * r_Y + x[0] * r_X) + 2 * Power(a, 4) * Power(x[2], 2) * r * (a + 2 * x[0] * r_Y - 2 * x[1] * r_X) + 2 * Power(a, 2) * Power(x[2], 2) * Power(r, 3) * (a + x[0] * r_Y - x[1] * r_X) + 2 * Power(r, 7) * (a - x[0] * r_Y + x[1] * r_X))) + 2 * x[7] * x[5] * Power(r, 2) * (Power(a, 2) + Power(r, 2)) * (2 * G * M * r * (a * x[1] + x[0] * r) * Power(Power(a, 2) + Power(r, 2), 3) * (-3 * Power(a, 2) * Power(x[2], 2) * Power(r, 2) + Power(r, 6)) * r_Y - 2 * G * M * x[2] * r * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (2 * Power(r, 3) * (a * x[0] - x[1] * r) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + x[1] * Power(r, 2) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 3 * r * (-(a * x[0]) + x[1] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + Power(r, 2) * (a * x[0] - x[1] * r) * (Power(a, 2) + Power(r, 2)) * (2 * Power(a, 2) * x[2] + 4 * Power(r, 3) * r_X) + 4 * x[2] * Power(r, 4) * Power(Power(a, 2) + Power(r, 2), 2) * r_Y - 2 * x[2] * Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_Y) + (2 * G * M * Power(r, 3) * Power(a * x[1] + x[0] * r, 2) - Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4))) * (2 * Power(a, 3) * Power(r, 5) + 3 * Power(a, 5) * Power(x[2], 2) * (x[1] * r_Y + x[0] * r_X) + Power(a, 3) * Power(x[2], 2) * Power(r, 2) * (x[1] * r_Y + x[0] * r_X) - Power(a, 3) * Power(r, 4) * (x[1] * r_Y + x[0] * r_X) - 3 * a * Power(r, 6) * (x[1] * r_Y + x[0] * r_X) + 2 * Power(a, 4) * Power(x[2], 2) * r * (a + 2 * x[0] * r_Y - 2 * x[1] * r_X) + 2 * Power(a, 2) * Power(x[2], 2) * Power(r, 3) * (a + x[0] * r_Y - x[1] * r_X) + 2 * Power(r, 7) * (a - x[0] * r_Y + x[1] * r_X))) + Power(x[4], 2) * Power(r, 2) * (a * x[1] + x[0] * r) * (-((2 * G * M * Power(r, 3) * Power(a * x[1] + x[0] * r, 2) - Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4))) * (4 * Power(r, 4) * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * r_X + 4 * Power(r, 2) * (a * x[1] + x[0] * r) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 3 * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 2 * r * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * (r + x[0] * r_X))) + 4 * G * M * Power(r, 3) * Power(Power(a, 2) + Power(r, 2), 2) * (4 * Power(r, 4) * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * r_X + 2 * Power(r, 2) * (a * x[1] + x[0] * r) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 3 * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - r * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * (r + x[0] * r_X)) + 2 * G * M * x[2] * r * (Power(a, 2) + Power(r, 2)) * (4 * Power(r, 3) * Power(a * x[1] + x[0] * r, 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 2 * x[0] * Power(r, 2) * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 3 * r * Power(a * x[1] + x[0] * r, 2) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 2 * Power(r, 2) * Power(a * x[1] + x[0] * r, 2) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * x[2] + 2 * Power(r, 3) * r_X) - 8 * x[2] * Power(r, 4) * (a * x[1] + x[0] * r) * Power(Power(a, 2) + Power(r, 2), 2) * r_X - 4 * x[2] * Power(r, 2) * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 4 * x[2] * (a * x[1] + x[0] * r) * Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 2 * x[2] * r * Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * (r + x[0] * r_X)) - 2 * G * M * Power(r, 3) * (a * x[0] - x[1] * r) * (-2 * Power(a, 4) * x[1] * Power(x[2], 2) * Power(r, 3) + 2 * Power(a, 2) * x[1] * (-2 * Power(a, 2) + Power(x[2], 2)) * Power(r, 5) + 2 * x[1] * Power(r, 9) - 3 * Power(a, 6) * x[1] * Power(x[2], 2) * (x[1] * r_Y + 2 * x[0] * r_X) - 2 * a * Power(r, 7) * (a * x[1] - 4 * x[0] * x[1] * r_Y - 4 * (Power(x[0], 2) - Power(x[1], 2)) * r_X) - 4 * Power(a, 5) * Power(x[2], 2) * r * (a * x[1] + 2 * x[0] * x[1] * r_Y + 2 * (Power(x[0], 2) - Power(x[1], 2)) * r_X) + Power(a, 2) * Power(r, 4) * (-6 * a * x[0] * Power(x[2], 2) + (Power(a, 2) * Power(x[1], 2) - Power(x[0], 2) * Power(x[2], 2)) * r_Y + 2 * x[0] * x[1] * (Power(a, 2) + Power(x[2], 2)) * r_X) + Power(a, 2) * Power(r, 6) * (-((Power(x[0], 2) - 5 * Power(x[1], 2)) * r_Y) - 6 * x[0] * (a - 2 * x[1] * r_X)) + Power(a, 4) * Power(x[2], 2) * Power(r, 2) * ((-5 * Power(x[0], 2) + Power(x[1], 2)) * r_Y - 6 * x[0] * (a - 2 * x[1] * r_X)) + 3 * x[0] * Power(r, 8) * (x[0] * r_Y - 2 * (a + x[1] * r_X)))) - Power(x[5], 2) * Power(r, 2) * (4 * G * M * Power(r, 3) * (a * x[1] + x[0] * r) * Power(Power(a, 2) + Power(r, 2), 2) * (Power(r, 8) - 3 * Power(a, 5) * x[0] * Power(x[2], 2) * r_Y + 4 * Power(a, 4) * x[1] * Power(x[2], 2) * r * r_Y + 2 * Power(a, 2) * x[1] * Power(x[2], 2) * Power(r, 3) * r_Y - 2 * x[1] * Power(r, 7) * r_Y + Power(a, 3) * Power(x[2], 2) * Power(r, 2) * (a - x[0] * r_Y) + a * Power(r, 6) * (a + 3 * x[0] * r_Y) + Power(a, 2) * Power(r, 4) * (Power(x[2], 2) + a * x[0] * r_Y)) - 2 * G * M * Power(r, 3) * (a * x[1] + x[0] * r) * Power(a * x[0] - x[1] * r, 2) * (4 * Power(r, 4) * (a * x[0] - x[1] * r) * (Power(a, 2) + Power(r, 2)) * r_Y + 4 * Power(r, 2) * (a * x[0] - x[1] * r) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_Y - 3 * (a * x[0] - x[1] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_Y + 2 * r * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * (r + x[1] * r_Y)) - 2 * G * M * x[2] * r * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (4 * Power(r, 3) * Power(a * x[0] - x[1] * r, 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 2 * x[1] * Power(r, 2) * (a * x[0] - x[1] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 3 * r * Power(a * x[0] - x[1] * r, 2) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 2 * Power(r, 2) * Power(a * x[0] - x[1] * r, 2) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * x[2] + 2 * Power(r, 3) * r_X) + 8 * x[2] * Power(r, 4) * (a * x[0] - x[1] * r) * Power(Power(a, 2) + Power(r, 2), 2) * r_Y + 4 * x[2] * Power(r, 2) * (a * x[0] - x[1] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_Y - 4 * x[2] * (a * x[0] - x[1] * r) * Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_Y + 2 * x[2] * r * Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * (r + x[1] * r_Y)) - (2 * G * M * Power(r, 3) * Power(a * x[1] + x[0] * r, 2) - Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4))) * (-2 * Power(a, 4) * x[0] * Power(x[2], 2) * Power(r, 3) + 2 * Power(a, 2) * x[0] * (-2 * Power(a, 2) + Power(x[2], 2)) * Power(r, 5) + 2 * x[0] * Power(r, 9) - 3 * Power(a, 6) * x[0] * Power(x[2], 2) * (2 * x[1] * r_Y + x[0] * r_X) + 3 * x[1] * Power(r, 8) * (2 * a - 2 * x[0] * r_Y + x[1] * r_X) + Power(a, 4) * Power(x[2], 2) * Power(r, 2) * (6 * a * x[1] + 12 * x[0] * x[1] * r_Y + (Power(x[0], 2) - 5 * Power(x[1], 2)) * r_X) + Power(a, 2) * Power(r, 6) * (6 * a * x[1] + 12 * x[0] * x[1] * r_Y + (5 * Power(x[0], 2) - Power(x[1], 2)) * r_X) + Power(a, 2) * Power(r, 4) * (6 * a * x[1] * Power(x[2], 2) + 2 * x[0] * x[1] * (Power(a, 2) + Power(x[2], 2)) * r_Y + (Power(a, 2) * Power(x[0], 2) - Power(x[1], 2) * Power(x[2], 2)) * r_X) - 4 * Power(a, 5) * Power(x[2], 2) * r * (2 * (Power(x[0], 2) - Power(x[1], 2)) * r_Y + x[0] * (a - 2 * x[1] * r_X)) - 2 * a * Power(r, 7) * (-4 * (Power(x[0], 2) - Power(x[1], 2)) * r_Y + x[0] * (a + 4 * x[1] * r_X)))) - 2 * x[4] * x[5] * Power(r, 2) * (a * x[1] + x[0] * r) * ((2 * G * M * Power(r, 3) * Power(a * x[1] + x[0] * r, 2) - Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4))) * (4 * Power(r, 4) * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * r_Y + 4 * Power(r, 2) * (a * x[1] + x[0] * r) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_Y - 3 * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_Y - 2 * r * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * (a + x[0] * r_Y)) - 2 * G * M * Power(r, 3) * Power(Power(a, 2) + Power(r, 2), 2) * ((-3 * Power(a, 5) * x[1] * Power(x[2], 2) - 4 * Power(a, 4) * x[0] * Power(x[2], 2) * r - Power(a, 3) * x[1] * Power(x[2], 2) * Power(r, 2) - 2 * Power(a, 2) * x[0] * Power(x[2], 2) * Power(r, 3) + Power(a, 3) * x[1] * Power(r, 4) + 3 * a * x[1] * Power(r, 6) + 2 * x[0] * Power(r, 7)) * r_Y + (3 * Power(a, 5) * x[0] * Power(x[2], 2) - 4 * Power(a, 4) * x[1] * Power(x[2], 2) * r + Power(a, 3) * x[0] * Power(x[2], 2) * Power(r, 2) - 2 * Power(a, 2) * x[1] * Power(x[2], 2) * Power(r, 3) - Power(a, 3) * x[0] * Power(r, 4) - 3 * a * x[0] * Power(r, 6) + 2 * x[1] * Power(r, 7)) * r_X) - 2 * G * M * Power(r, 3) * Power(a * x[0] - x[1] * r, 2) * (4 * Power(r, 4) * (a * x[0] - x[1] * r) * (Power(a, 2) + Power(r, 2)) * r_X + 4 * Power(r, 2) * (a * x[0] - x[1] * r) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 3 * (a * x[0] - x[1] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 2 * r * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * (a - x[1] * r_X)) + 2 * G * M * x[2] * r * (Power(a, 2) + Power(r, 2)) * (2 * Power(a, 5) * x[2] * Power(r, 4) * (x[1] * r_Y - x[0] * r_X) + 2 * Power(a, 7) * Power(x[2], 3) * (-(x[1] * r_Y) + x[0] * r_X) - 3 * Power(a, 6) * Power(x[2], 2) * r * (x[0] * x[1] * r_X + x[0] * x[2] * r_Y + x[1] * x[2] * r_X) + 2 * Power(a, 5) * x[2] * Power(r, 2) * (a * x[0] * x[1] + 2 * (-Power(x[0], 2) + Power(x[1], 2)) * x[2] * r_X - x[1] * Power(x[2], 2) * r_Y + x[0] * Power(x[2], 2) * r_X) + 2 * Power(a, 4) * x[2] * Power(r, 3) * (a * Power(x[0], 2) - a * Power(x[1], 2) + 3 * x[0] * x[1] * x[2] * r_X - 2 * x[0] * Power(x[2], 2) * r_Y - 2 * x[1] * Power(x[2], 2) * r_X) - 2 * Power(a, 2) * x[2] * Power(r, 6) * (-3 * a * x[1] * r_Y + x[0] * (x[1] + 3 * a * r_X)) + 4 * a * Power(r, 8) * ((Power(x[0], 2) - Power(x[1], 2)) * r_X + x[2] * (x[1] * r_Y - x[0] * r_X)) + 2 * Power(a, 2) * Power(r, 7) * (3 * x[0] * x[1] * r_X + 2 * x[2] * (x[0] * r_Y + x[1] * r_X)) + Power(r, 9) * (-3 * x[0] * x[1] * r_X + 3 * x[2] * (x[0] * r_Y + x[1] * r_X)) + Power(a, 2) * Power(r, 5) * (x[0] * x[1] * (Power(a, 2) + Power(x[2], 2)) * r_X + x[2] * (2 * a * (Power(x[0], 2) - Power(x[1], 2)) + x[0] * (Power(a, 2) - Power(x[2], 2)) * r_Y + x[1] * (Power(a, 2) - Power(x[2], 2)) * r_X)))) + 2 * x[5] * x[6] * r * (2 * G * M * Power(r, 4) * (a * x[1] + x[0] * r) * Power(a * x[0] - x[1] * r, 2) * (4 * Power(r, 2) * (a * x[0] - x[1] * r) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 2 * x[1] * r * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 3 * (a * x[0] - x[1] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + r * (a * x[0] - x[1] * r) * (Power(a, 2) + Power(r, 2)) * (2 * Power(a, 2) * x[2] + 4 * Power(r, 3) * r_X)) + 2 * G * M * Power(x[2], 3) * r * (a * x[1] + x[0] * r) * Power(Power(a, 2) + Power(r, 2), 4) * (Power(a, 2) * Power(x[2], 2) - 3 * Power(r, 4)) * r_Y - 2 * G * M * Power(r, 3) * (a * x[1] + x[0] * r) * Power(Power(a, 2) + Power(r, 2), 2) * (2 * Power(r, 3) * (a * x[0] - x[1] * r) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + x[1] * Power(r, 2) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 3 * r * (-(a * x[0]) + x[1] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + Power(r, 2) * (a * x[0] - x[1] * r) * (Power(a, 2) + Power(r, 2)) * (2 * Power(a, 2) * x[2] + 4 * Power(r, 3) * r_X) - 4 * x[2] * Power(r, 4) * Power(Power(a, 2) + Power(r, 2), 2) * r_Y + 2 * x[2] * Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_Y) + (2 * G * M * Power(r, 3) * Power(a * x[1] + x[0] * r, 2) - Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4))) * (2 * Power(a, 7) * Power(x[2], 3) * (x[1] * r_Y + x[0] * r_X) - 2 * Power(a, 5) * x[2] * Power(r, 4) * (x[1] * r_Y + x[0] * r_X) + 2 * Power(a, 5) * x[2] * Power(r, 2) * (a * x[0] * x[1] + 2 * (-Power(x[0], 2) + Power(x[1], 2)) * x[2] * r_X + x[1] * Power(x[2], 2) * r_Y + x[0] * Power(x[2], 2) * r_X) + 2 * Power(a, 4) * x[2] * Power(r, 3) * (a * Power(x[0], 2) - a * Power(x[1], 2) + 2 * a * Power(x[2], 2) + 3 * x[0] * x[1] * x[2] * r_X + 2 * x[0] * Power(x[2], 2) * r_Y - 2 * x[1] * Power(x[2], 2) * r_X) - 2 * Power(a, 2) * x[2] * Power(r, 6) * (3 * a * x[1] * r_Y + x[0] * (x[1] + 3 * a * r_X)) + 4 * a * Power(r, 8) * ((Power(x[0], 2) - Power(x[1], 2)) * r_X - x[2] * (x[1] * r_Y + x[0] * r_X)) + Power(a, 6) * Power(x[2], 2) * r * (-3 * x[0] * x[1] * r_X + x[2] * (2 * a + 3 * x[0] * r_Y - 3 * x[1] * r_X)) + 2 * Power(a, 2) * Power(r, 7) * (3 * x[0] * x[1] * r_X + 2 * x[2] * (a - x[0] * r_Y + x[1] * r_X)) + Power(r, 9) * (-3 * x[0] * x[1] * r_X + x[2] * (2 * a - 3 * x[0] * r_Y + 3 * x[1] * r_X)) + Power(a, 2) * Power(r, 5) * (x[0] * x[1] * (Power(a, 2) + Power(x[2], 2)) * r_X + x[2] * (2 * a * (Power(a, 2) + Power(x[0], 2) - Power(x[1], 2) + Power(x[2], 2)) + x[0] * (-Power(a, 2) + Power(x[2], 2)) * r_Y + x[1] * (Power(a, 2) - Power(x[2], 2)) * r_X)))) - 2 * x[4] * x[6] * Power(r, 2) * (a * x[1] + x[0] * r) * ((2 * G * M * Power(r, 3) * Power(a * x[1] + x[0] * r, 2) - Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4))) * (4 * Power(r, 2) * (a * x[1] + x[0] * r) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 2 * x[0] * r * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 3 * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 2 * r * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * x[2] + 2 * Power(r, 3) * r_X)) - 2 * G * M * Power(x[2], 3) * Power(Power(a, 2) + Power(r, 2), 4) * (Power(a, 2) * Power(x[2], 2) - 3 * Power(r, 4)) * r_X - 2 * G * M * Power(r, 2) * Power(Power(a, 2) + Power(r, 2), 2) * (2 * Power(r, 3) * (a * x[1] + x[0] * r) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - x[0] * Power(r, 2) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 3 * r * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 2 * Power(r, 2) * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * x[2] + 2 * Power(r, 3) * r_X) + 4 * x[2] * Power(r, 4) * Power(Power(a, 2) + Power(r, 2), 2) * r_X - 2 * x[2] * Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X) + 2 * G * M * Power(r, 2) * (a * x[0] - x[1] * r) * (-2 * Power(a, 7) * Power(x[2], 3) * (x[1] * r_Y + x[0] * r_X) + 2 * Power(a, 5) * x[2] * Power(r, 4) * (x[1] * r_Y + x[0] * r_X) + 2 * Power(a, 2) * x[2] * Power(r, 6) * (-(x[0] * x[1]) + 3 * a * x[1] * r_Y + 3 * a * x[0] * r_X) + 2 * Power(a, 5) * x[2] * Power(r, 2) * (a * x[0] * x[1] + 2 * (-Power(x[0], 2) + Power(x[1], 2)) * x[2] * r_X - x[1] * Power(x[2], 2) * r_Y - x[0] * Power(x[2], 2) * r_X) + 2 * Power(a, 4) * x[2] * Power(r, 3) * (a * Power(x[0], 2) - a * Power(x[1], 2) - 2 * a * Power(x[2], 2) + 3 * x[0] * x[1] * x[2] * r_X - 2 * x[0] * Power(x[2], 2) * r_Y + 2 * x[1] * Power(x[2], 2) * r_X) + 4 * a * Power(r, 8) * ((Power(x[0], 2) - Power(x[1], 2)) * r_X + x[2] * (x[1] * r_Y + x[0] * r_X)) - Power(a, 6) * Power(x[2], 2) * r * (3 * x[0] * x[1] * r_X + x[2] * (2 * a + 3 * x[0] * r_Y - 3 * x[1] * r_X)) + 2 * Power(a, 2) * Power(r, 7) * (3 * x[0] * x[1] * r_X - 2 * x[2] * (a - x[0] * r_Y + x[1] * r_X)) - Power(r, 9) * (3 * x[0] * x[1] * r_X + x[2] * (2 * a - 3 * x[0] * r_Y + 3 * x[1] * r_X)) + Power(a, 2) * Power(r, 5) * (x[0] * x[1] * (Power(a, 2) + Power(x[2], 2)) * r_X - x[2] * (2 * a * (Power(a, 2) - Power(x[0], 2) + Power(x[1], 2) + Power(x[2], 2)) + x[0] * (-Power(a, 2) + Power(x[2], 2)) * r_Y + x[1] * (Power(a, 2) - Power(x[2], 2)) * r_X)))))) / (Power(Power(a, 2) + Power(r, 2), 5) * Power(Power(a, 2) * Power(x[2], 2) + Power(r, 4), 3));
}

inline double Kerr_y(state_type& x, double M, double G, double a, double r, double r_X, double r_Y, double r_Z) {
	return (G * M * (Power(x[7], 2) * Power(Power(a, 2) + Power(r, 2), 3) * (2 * G * M * x[2] * Power(r, 4) * (-(a * x[0]) + x[1] * r) * (Power(a, 2) + Power(r, 2)) * (2 * Power(a, 2) * x[2] * r - 3 * Power(a, 2) * Power(x[2], 2) * r_X + Power(r, 4) * r_X) + (-3 * Power(a, 2) * Power(x[2], 2) * Power(r, 2) + Power(r, 6)) * (2 * G * M * Power(r, 3) * Power(a * x[0] - x[1] * r, 2) - Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4))) * r_Y + 2 * G * M * Power(r, 3) * (a * x[1] + x[0] * r) * (-(a * x[0]) + x[1] * r) * (-3 * Power(a, 2) * Power(x[2], 2) * Power(r, 2) + Power(r, 6)) * r_X) + 2 * x[7] * x[6] * r * (Power(a, 2) + Power(r, 2)) * (2 * G * M * Power(r, 4) * (-(a * x[0]) + x[1] * r) * Power(Power(a, 2) + Power(r, 2), 3) * (2 * Power(a, 2) * x[2] * r - 3 * Power(a, 2) * Power(x[2], 2) * r_X + Power(r, 4) * r_X) + (2 * G * M * Power(r, 3) * Power(a * x[0] - x[1] * r, 2) - Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4))) * (2 * Power(r, 3) * (a * x[0] - x[1] * r) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + x[1] * Power(r, 2) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 3 * r * (-(a * x[0]) + x[1] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + Power(r, 2) * (a * x[0] - x[1] * r) * (Power(a, 2) + Power(r, 2)) * (2 * Power(a, 2) * x[2] + 4 * Power(r, 3) * r_X) + 4 * x[2] * Power(r, 4) * Power(Power(a, 2) + Power(r, 2), 2) * r_Y - 2 * x[2] * Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_Y) + 2 * G * M * Power(r, 3) * (a * x[1] + x[0] * r) * (a * x[0] - x[1] * r) * (2 * Power(r, 3) * (a * x[1] + x[0] * r) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - x[0] * Power(r, 2) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 3 * r * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 2 * Power(r, 2) * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * x[2] + 2 * Power(r, 3) * r_X) - 4 * x[2] * Power(r, 4) * Power(Power(a, 2) + Power(r, 2), 2) * r_X + 2 * x[2] * Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X)) - Power(x[6], 2) * (Power(a, 2) + Power(r, 2)) * (4 * G * M * Power(r, 4) * (-(a * x[0]) + x[1] * r) * Power(Power(a, 2) + Power(r, 2), 3) * (-(Power(a, 2) * Power(x[2], 2)) + Power(r, 4)) * (r - 2 * x[2] * r_X) - 2 * G * M * Power(x[2], 2) * Power(r, 2) * (-(a * x[0]) + x[1] * r) * Power(Power(a, 2) + Power(r, 2), 3) * (2 * Power(r, 5) + Power(a, 2) * Power(x[2], 3) * r_X - 3 * x[2] * Power(r, 4) * r_X) + (2 * G * M * Power(r, 3) * Power(a * x[0] - x[1] * r, 2) - Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4))) * (2 * Power(a, 4) * x[1] * Power(x[2], 2) * Power(r, 3) - 2 * x[1] * Power(r, 9) + 4 * Power(a, 5) * x[0] * Power(x[2], 3) * r * r_X + 2 * Power(a, 2) * x[2] * Power(r, 5) * (x[1] * x[2] - 2 * a * x[0] * r_X) - 2 * a * Power(r, 7) * (a * x[1] + 4 * x[0] * x[2] * r_X) + Power(a, 6) * Power(x[2], 4) * r_Y + 2 * Power(a, 2) * Power(r, 6) * (a * x[0] + x[1] * x[2] * r_X - 3 * Power(x[2], 2) * r_Y) + Power(r, 8) * (2 * a * x[0] + 6 * x[1] * x[2] * r_X - 3 * Power(x[2], 2) * r_Y) - 2 * Power(a, 4) * Power(x[2], 2) * Power(r, 2) * (a * x[0] + 3 * x[1] * x[2] * r_X - Power(x[2], 2) * r_Y) + Power(a, 2) * Power(x[2], 2) * Power(r, 4) * (-2 * a * x[0] - 2 * x[1] * x[2] * r_X + (-3 * Power(a, 2) + Power(x[2], 2)) * r_Y)) + 2 * G * M * Power(r, 3) * (a * x[1] + x[0] * r) * (a * x[0] - x[1] * r) * (2 * Power(r, 2) * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) - 4 * x[2] * Power(r, 3) * (a * x[1] + x[0] * r) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 2 * x[0] * x[2] * Power(r, 2) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 4 * x[2] * r * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 4 * x[2] * Power(r, 2) * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * x[2] + 2 * Power(r, 3) * r_X) + 4 * Power(x[2], 2) * Power(r, 4) * Power(Power(a, 2) + Power(r, 2), 2) * r_X - Power(x[2], 2) * Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X)) - 4 * G * M * x[7] * x[5] * Power(r, 3) * (a * x[0] - x[1] * r) * (Power(a, 2) + Power(r, 2)) * (Power(Power(a, 2) + Power(r, 2), 3) * (-3 * Power(a, 2) * Power(x[2], 2) * Power(r, 2) + Power(r, 6)) * r_Y - x[2] * (Power(a, 2) + Power(r, 2)) * (2 * Power(r, 3) * (a * x[0] - x[1] * r) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + x[1] * Power(r, 2) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 3 * r * (-(a * x[0]) + x[1] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + Power(r, 2) * (a * x[0] - x[1] * r) * (Power(a, 2) + Power(r, 2)) * (2 * Power(a, 2) * x[2] + 4 * Power(r, 3) * r_X) + 4 * x[2] * Power(r, 4) * Power(Power(a, 2) + Power(r, 2), 2) * r_Y - 2 * x[2] * Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_Y) + Power(r, 2) * (a * x[1] + x[0] * r) * (2 * Power(a, 3) * Power(r, 5) + 3 * Power(a, 5) * Power(x[2], 2) * (x[1] * r_Y + x[0] * r_X) + Power(a, 3) * Power(x[2], 2) * Power(r, 2) * (x[1] * r_Y + x[0] * r_X) - Power(a, 3) * Power(r, 4) * (x[1] * r_Y + x[0] * r_X) - 3 * a * Power(r, 6) * (x[1] * r_Y + x[0] * r_X) + 2 * Power(a, 4) * Power(x[2], 2) * r * (a + 2 * x[0] * r_Y - 2 * x[1] * r_X) + 2 * Power(a, 2) * Power(x[2], 2) * Power(r, 3) * (a + x[0] * r_Y - x[1] * r_X) + 2 * Power(r, 7) * (a - x[0] * r_Y + x[1] * r_X))) - 2 * x[7] * x[4] * Power(r, 2) * (Power(a, 2) + Power(r, 2)) * (-2 * G * M * r * (-(a * x[0]) + x[1] * r) * Power(Power(a, 2) + Power(r, 2), 3) * (-3 * Power(a, 2) * Power(x[2], 2) * Power(r, 2) + Power(r, 6)) * r_X + 2 * G * M * x[2] * r * (a * x[0] - x[1] * r) * (Power(a, 2) + Power(r, 2)) * (2 * Power(r, 3) * (a * x[1] + x[0] * r) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - x[0] * Power(r, 2) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 3 * r * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 2 * Power(r, 2) * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * x[2] + 2 * Power(r, 3) * r_X) - 4 * x[2] * Power(r, 4) * Power(Power(a, 2) + Power(r, 2), 2) * r_X + 2 * x[2] * Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X) + (2 * G * M * Power(r, 3) * Power(a * x[0] - x[1] * r, 2) - Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4))) * (2 * Power(a, 3) * Power(r, 5) + 3 * Power(a, 5) * Power(x[2], 2) * (x[1] * r_Y + x[0] * r_X) + Power(a, 3) * Power(x[2], 2) * Power(r, 2) * (x[1] * r_Y + x[0] * r_X) - Power(a, 3) * Power(r, 4) * (x[1] * r_Y + x[0] * r_X) - 3 * a * Power(r, 6) * (x[1] * r_Y + x[0] * r_X) + 2 * Power(a, 4) * Power(x[2], 2) * r * (a + 2 * x[0] * r_Y - 2 * x[1] * r_X) + 2 * Power(a, 2) * Power(x[2], 2) * Power(r, 3) * (a + x[0] * r_Y - x[1] * r_X) + 2 * Power(r, 7) * (a - x[0] * r_Y + x[1] * r_X))) - Power(x[4], 2) * Power(r, 2) * (-2 * G * M * Power(r, 3) * Power(a * x[1] + x[0] * r, 2) * (a * x[0] - x[1] * r) * (4 * Power(r, 4) * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * r_X + 4 * Power(r, 2) * (a * x[1] + x[0] * r) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 3 * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 2 * r * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * (r + x[0] * r_X)) + 4 * G * M * Power(r, 3) * (a * x[0] - x[1] * r) * Power(Power(a, 2) + Power(r, 2), 2) * (4 * Power(r, 4) * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * r_X + 2 * Power(r, 2) * (a * x[1] + x[0] * r) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 3 * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - r * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * (r + x[0] * r_X)) + 2 * G * M * x[2] * r * (a * x[0] - x[1] * r) * (Power(a, 2) + Power(r, 2)) * (4 * Power(r, 3) * Power(a * x[1] + x[0] * r, 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 2 * x[0] * Power(r, 2) * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 3 * r * Power(a * x[1] + x[0] * r, 2) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 2 * Power(r, 2) * Power(a * x[1] + x[0] * r, 2) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * x[2] + 2 * Power(r, 3) * r_X) - 8 * x[2] * Power(r, 4) * (a * x[1] + x[0] * r) * Power(Power(a, 2) + Power(r, 2), 2) * r_X - 4 * x[2] * Power(r, 2) * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 4 * x[2] * (a * x[1] + x[0] * r) * Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 2 * x[2] * r * Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * (r + x[0] * r_X)) - (2 * G * M * Power(r, 3) * Power(a * x[0] - x[1] * r, 2) - Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4))) * (-2 * Power(a, 4) * x[1] * Power(x[2], 2) * Power(r, 3) + 2 * Power(a, 2) * x[1] * (-2 * Power(a, 2) + Power(x[2], 2)) * Power(r, 5) + 2 * x[1] * Power(r, 9) - 3 * Power(a, 6) * x[1] * Power(x[2], 2) * (x[1] * r_Y + 2 * x[0] * r_X) - 2 * a * Power(r, 7) * (a * x[1] - 4 * x[0] * x[1] * r_Y - 4 * (Power(x[0], 2) - Power(x[1], 2)) * r_X) - 4 * Power(a, 5) * Power(x[2], 2) * r * (a * x[1] + 2 * x[0] * x[1] * r_Y + 2 * (Power(x[0], 2) - Power(x[1], 2)) * r_X) + Power(a, 2) * Power(r, 4) * (-6 * a * x[0] * Power(x[2], 2) + (Power(a, 2) * Power(x[1], 2) - Power(x[0], 2) * Power(x[2], 2)) * r_Y + 2 * x[0] * x[1] * (Power(a, 2) + Power(x[2], 2)) * r_X) + Power(a, 2) * Power(r, 6) * (-((Power(x[0], 2) - 5 * Power(x[1], 2)) * r_Y) - 6 * x[0] * (a - 2 * x[1] * r_X)) + Power(a, 4) * Power(x[2], 2) * Power(r, 2) * ((-5 * Power(x[0], 2) + Power(x[1], 2)) * r_Y - 6 * x[0] * (a - 2 * x[1] * r_X)) + 3 * x[0] * Power(r, 8) * (x[0] * r_Y - 2 * (a + x[1] * r_X)))) + Power(x[5], 2) * Power(r, 2) * (a * x[0] - x[1] * r) * (4 * G * M * Power(r, 3) * Power(Power(a, 2) + Power(r, 2), 2) * (Power(r, 8) - 3 * Power(a, 5) * x[0] * Power(x[2], 2) * r_Y + 4 * Power(a, 4) * x[1] * Power(x[2], 2) * r * r_Y + 2 * Power(a, 2) * x[1] * Power(x[2], 2) * Power(r, 3) * r_Y - 2 * x[1] * Power(r, 7) * r_Y + Power(a, 3) * Power(x[2], 2) * Power(r, 2) * (a - x[0] * r_Y) + a * Power(r, 6) * (a + 3 * x[0] * r_Y) + Power(a, 2) * Power(r, 4) * (Power(x[2], 2) + a * x[0] * r_Y)) - (2 * G * M * Power(r, 3) * Power(a * x[0] - x[1] * r, 2) - Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4))) * (4 * Power(r, 4) * (a * x[0] - x[1] * r) * (Power(a, 2) + Power(r, 2)) * r_Y + 4 * Power(r, 2) * (a * x[0] - x[1] * r) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_Y - 3 * (a * x[0] - x[1] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_Y + 2 * r * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * (r + x[1] * r_Y)) - 2 * G * M * x[2] * r * (Power(a, 2) + Power(r, 2)) * (4 * Power(r, 3) * Power(a * x[0] - x[1] * r, 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 2 * x[1] * Power(r, 2) * (a * x[0] - x[1] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 3 * r * Power(a * x[0] - x[1] * r, 2) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 2 * Power(r, 2) * Power(a * x[0] - x[1] * r, 2) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * x[2] + 2 * Power(r, 3) * r_X) + 8 * x[2] * Power(r, 4) * (a * x[0] - x[1] * r) * Power(Power(a, 2) + Power(r, 2), 2) * r_Y + 4 * x[2] * Power(r, 2) * (a * x[0] - x[1] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_Y - 4 * x[2] * (a * x[0] - x[1] * r) * Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_Y + 2 * x[2] * r * Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * (r + x[1] * r_Y)) - 2 * G * M * Power(r, 3) * (a * x[1] + x[0] * r) * (-2 * Power(a, 4) * x[0] * Power(x[2], 2) * Power(r, 3) + 2 * Power(a, 2) * x[0] * (-2 * Power(a, 2) + Power(x[2], 2)) * Power(r, 5) + 2 * x[0] * Power(r, 9) - 3 * Power(a, 6) * x[0] * Power(x[2], 2) * (2 * x[1] * r_Y + x[0] * r_X) + 3 * x[1] * Power(r, 8) * (2 * a - 2 * x[0] * r_Y + x[1] * r_X) + Power(a, 4) * Power(x[2], 2) * Power(r, 2) * (6 * a * x[1] + 12 * x[0] * x[1] * r_Y + (Power(x[0], 2) - 5 * Power(x[1], 2)) * r_X) + Power(a, 2) * Power(r, 6) * (6 * a * x[1] + 12 * x[0] * x[1] * r_Y + (5 * Power(x[0], 2) - Power(x[1], 2)) * r_X) + Power(a, 2) * Power(r, 4) * (6 * a * x[1] * Power(x[2], 2) + 2 * x[0] * x[1] * (Power(a, 2) + Power(x[2], 2)) * r_Y + (Power(a, 2) * Power(x[0], 2) - Power(x[1], 2) * Power(x[2], 2)) * r_X) - 4 * Power(a, 5) * Power(x[2], 2) * r * (2 * (Power(x[0], 2) - Power(x[1], 2)) * r_Y + x[0] * (a - 2 * x[1] * r_X)) - 2 * a * Power(r, 7) * (-4 * (Power(x[0], 2) - Power(x[1], 2)) * r_Y + x[0] * (a + 4 * x[1] * r_X)))) + 2 * x[4] * x[5] * Power(r, 2) * (2 * G * M * Power(r, 3) * Power(a * x[1] + x[0] * r, 2) * (a * x[0] - x[1] * r) * (4 * Power(r, 4) * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * r_Y + 4 * Power(r, 2) * (a * x[1] + x[0] * r) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_Y - 3 * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_Y - 2 * r * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * (a + x[0] * r_Y)) + 2 * G * M * Power(r, 3) * (-(a * x[0]) + x[1] * r) * Power(Power(a, 2) + Power(r, 2), 2) * ((-3 * Power(a, 5) * x[1] * Power(x[2], 2) - 4 * Power(a, 4) * x[0] * Power(x[2], 2) * r - Power(a, 3) * x[1] * Power(x[2], 2) * Power(r, 2) - 2 * Power(a, 2) * x[0] * Power(x[2], 2) * Power(r, 3) + Power(a, 3) * x[1] * Power(r, 4) + 3 * a * x[1] * Power(r, 6) + 2 * x[0] * Power(r, 7)) * r_Y + (3 * Power(a, 5) * x[0] * Power(x[2], 2) - 4 * Power(a, 4) * x[1] * Power(x[2], 2) * r + Power(a, 3) * x[0] * Power(x[2], 2) * Power(r, 2) - 2 * Power(a, 2) * x[1] * Power(x[2], 2) * Power(r, 3) - Power(a, 3) * x[0] * Power(r, 4) - 3 * a * x[0] * Power(r, 6) + 2 * x[1] * Power(r, 7)) * r_X) - (a * x[0] - x[1] * r) * (2 * G * M * Power(r, 3) * Power(a * x[0] - x[1] * r, 2) - Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4))) * (4 * Power(r, 4) * (a * x[0] - x[1] * r) * (Power(a, 2) + Power(r, 2)) * r_X + 4 * Power(r, 2) * (a * x[0] - x[1] * r) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 3 * (a * x[0] - x[1] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 2 * r * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * (a - x[1] * r_X)) + 2 * G * M * x[2] * r * (a * x[0] - x[1] * r) * (Power(a, 2) + Power(r, 2)) * (2 * Power(a, 5) * x[2] * Power(r, 4) * (x[1] * r_Y - x[0] * r_X) + 2 * Power(a, 7) * Power(x[2], 3) * (-(x[1] * r_Y) + x[0] * r_X) - 3 * Power(a, 6) * Power(x[2], 2) * r * (x[0] * x[1] * r_X + x[0] * x[2] * r_Y + x[1] * x[2] * r_X) + 2 * Power(a, 5) * x[2] * Power(r, 2) * (a * x[0] * x[1] + 2 * (-Power(x[0], 2) + Power(x[1], 2)) * x[2] * r_X - x[1] * Power(x[2], 2) * r_Y + x[0] * Power(x[2], 2) * r_X) + 2 * Power(a, 4) * x[2] * Power(r, 3) * (a * Power(x[0], 2) - a * Power(x[1], 2) + 3 * x[0] * x[1] * x[2] * r_X - 2 * x[0] * Power(x[2], 2) * r_Y - 2 * x[1] * Power(x[2], 2) * r_X) - 2 * Power(a, 2) * x[2] * Power(r, 6) * (-3 * a * x[1] * r_Y + x[0] * (x[1] + 3 * a * r_X)) + 4 * a * Power(r, 8) * ((Power(x[0], 2) - Power(x[1], 2)) * r_X + x[2] * (x[1] * r_Y - x[0] * r_X)) + 2 * Power(a, 2) * Power(r, 7) * (3 * x[0] * x[1] * r_X + 2 * x[2] * (x[0] * r_Y + x[1] * r_X)) + Power(r, 9) * (-3 * x[0] * x[1] * r_X + 3 * x[2] * (x[0] * r_Y + x[1] * r_X)) + Power(a, 2) * Power(r, 5) * (x[0] * x[1] * (Power(a, 2) + Power(x[2], 2)) * r_X + x[2] * (2 * a * (Power(x[0], 2) - Power(x[1], 2)) + x[0] * (Power(a, 2) - Power(x[2], 2)) * r_Y + x[1] * (Power(a, 2) - Power(x[2], 2)) * r_X)))) - 2 * x[5] * x[6] * Power(r, 2) * (a * x[0] - x[1] * r) * ((2 * G * M * Power(r, 3) * Power(a * x[0] - x[1] * r, 2) - Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4))) * (4 * Power(r, 2) * (a * x[0] - x[1] * r) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 2 * x[1] * r * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 3 * (a * x[0] - x[1] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + r * (a * x[0] - x[1] * r) * (Power(a, 2) + Power(r, 2)) * (2 * Power(a, 2) * x[2] + 4 * Power(r, 3) * r_X)) + 2 * G * M * Power(x[2], 3) * Power(Power(a, 2) + Power(r, 2), 4) * (Power(a, 2) * Power(x[2], 2) - 3 * Power(r, 4)) * r_Y - 2 * G * M * Power(r, 2) * Power(Power(a, 2) + Power(r, 2), 2) * (2 * Power(r, 3) * (a * x[0] - x[1] * r) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + x[1] * Power(r, 2) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 3 * r * (-(a * x[0]) + x[1] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + Power(r, 2) * (a * x[0] - x[1] * r) * (Power(a, 2) + Power(r, 2)) * (2 * Power(a, 2) * x[2] + 4 * Power(r, 3) * r_X) - 4 * x[2] * Power(r, 4) * Power(Power(a, 2) + Power(r, 2), 2) * r_Y + 2 * x[2] * Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_Y) + 2 * G * M * Power(r, 2) * (a * x[1] + x[0] * r) * (2 * Power(a, 7) * Power(x[2], 3) * (x[1] * r_Y + x[0] * r_X) - 2 * Power(a, 5) * x[2] * Power(r, 4) * (x[1] * r_Y + x[0] * r_X) + 2 * Power(a, 5) * x[2] * Power(r, 2) * (a * x[0] * x[1] + 2 * (-Power(x[0], 2) + Power(x[1], 2)) * x[2] * r_X + x[1] * Power(x[2], 2) * r_Y + x[0] * Power(x[2], 2) * r_X) + 2 * Power(a, 4) * x[2] * Power(r, 3) * (a * Power(x[0], 2) - a * Power(x[1], 2) + 2 * a * Power(x[2], 2) + 3 * x[0] * x[1] * x[2] * r_X + 2 * x[0] * Power(x[2], 2) * r_Y - 2 * x[1] * Power(x[2], 2) * r_X) - 2 * Power(a, 2) * x[2] * Power(r, 6) * (3 * a * x[1] * r_Y + x[0] * (x[1] + 3 * a * r_X)) + 4 * a * Power(r, 8) * ((Power(x[0], 2) - Power(x[1], 2)) * r_X - x[2] * (x[1] * r_Y + x[0] * r_X)) + Power(a, 6) * Power(x[2], 2) * r * (-3 * x[0] * x[1] * r_X + x[2] * (2 * a + 3 * x[0] * r_Y - 3 * x[1] * r_X)) + 2 * Power(a, 2) * Power(r, 7) * (3 * x[0] * x[1] * r_X + 2 * x[2] * (a - x[0] * r_Y + x[1] * r_X)) + Power(r, 9) * (-3 * x[0] * x[1] * r_X + x[2] * (2 * a - 3 * x[0] * r_Y + 3 * x[1] * r_X)) + Power(a, 2) * Power(r, 5) * (x[0] * x[1] * (Power(a, 2) + Power(x[2], 2)) * r_X + x[2] * (2 * a * (Power(a, 2) + Power(x[0], 2) - Power(x[1], 2) + Power(x[2], 2)) + x[0] * (-Power(a, 2) + Power(x[2], 2)) * r_Y + x[1] * (Power(a, 2) - Power(x[2], 2)) * r_X)))) + 2 * x[4] * x[6] * r * (2 * G * M * Power(r, 4) * Power(a * x[1] + x[0] * r, 2) * (a * x[0] - x[1] * r) * (4 * Power(r, 2) * (a * x[1] + x[0] * r) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 2 * x[0] * r * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 3 * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 2 * r * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * x[2] + 2 * Power(r, 3) * r_X)) + 2 * G * M * Power(x[2], 3) * r * (-(a * x[0]) + x[1] * r) * Power(Power(a, 2) + Power(r, 2), 4) * (Power(a, 2) * Power(x[2], 2) - 3 * Power(r, 4)) * r_X - 2 * G * M * Power(r, 3) * (a * x[0] - x[1] * r) * Power(Power(a, 2) + Power(r, 2), 2) * (2 * Power(r, 3) * (a * x[1] + x[0] * r) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - x[0] * Power(r, 2) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 3 * r * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 2 * Power(r, 2) * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * x[2] + 2 * Power(r, 3) * r_X) + 4 * x[2] * Power(r, 4) * Power(Power(a, 2) + Power(r, 2), 2) * r_X - 2 * x[2] * Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X) + (2 * G * M * Power(r, 3) * Power(a * x[0] - x[1] * r, 2) - Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4))) * (-2 * Power(a, 7) * Power(x[2], 3) * (x[1] * r_Y + x[0] * r_X) + 2 * Power(a, 5) * x[2] * Power(r, 4) * (x[1] * r_Y + x[0] * r_X) + 2 * Power(a, 2) * x[2] * Power(r, 6) * (-(x[0] * x[1]) + 3 * a * x[1] * r_Y + 3 * a * x[0] * r_X) + 2 * Power(a, 5) * x[2] * Power(r, 2) * (a * x[0] * x[1] + 2 * (-Power(x[0], 2) + Power(x[1], 2)) * x[2] * r_X - x[1] * Power(x[2], 2) * r_Y - x[0] * Power(x[2], 2) * r_X) + 2 * Power(a, 4) * x[2] * Power(r, 3) * (a * Power(x[0], 2) - a * Power(x[1], 2) - 2 * a * Power(x[2], 2) + 3 * x[0] * x[1] * x[2] * r_X - 2 * x[0] * Power(x[2], 2) * r_Y + 2 * x[1] * Power(x[2], 2) * r_X) + 4 * a * Power(r, 8) * ((Power(x[0], 2) - Power(x[1], 2)) * r_X + x[2] * (x[1] * r_Y + x[0] * r_X)) - Power(a, 6) * Power(x[2], 2) * r * (3 * x[0] * x[1] * r_X + x[2] * (2 * a + 3 * x[0] * r_Y - 3 * x[1] * r_X)) + 2 * Power(a, 2) * Power(r, 7) * (3 * x[0] * x[1] * r_X - 2 * x[2] * (a - x[0] * r_Y + x[1] * r_X)) - Power(r, 9) * (3 * x[0] * x[1] * r_X + x[2] * (2 * a - 3 * x[0] * r_Y + 3 * x[1] * r_X)) + Power(a, 2) * Power(r, 5) * (x[0] * x[1] * (Power(a, 2) + Power(x[2], 2)) * r_X - x[2] * (2 * a * (Power(a, 2) - Power(x[0], 2) + Power(x[1], 2) + Power(x[2], 2)) + x[0] * (-Power(a, 2) + Power(x[2], 2)) * r_Y + x[1] * (Power(a, 2) - Power(x[2], 2)) * r_X)))))) / (Power(Power(a, 2) + Power(r, 2), 5) * Power(Power(a, 2) * Power(x[2], 2) + Power(r, 4), 3));
}

inline double Kerr_z(state_type& x, double M, double G, double a, double r, double r_X, double r_Y, double r_Z) {
	return (G * M * (Power(x[7], 2) * Power(r, 2) * Power(Power(a, 2) + Power(r, 2), 3) * (-((Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) - 2 * G * M * Power(x[2], 2) * r + Power(r, 4)) * (2 * Power(a, 2) * x[2] * r - 3 * Power(a, 2) * Power(x[2], 2) * r_X + Power(r, 4) * r_X)) + 2 * G * M * x[2] * (a * x[0] - x[1] * r) * (3 * Power(a, 2) * Power(x[2], 2) * Power(r, 2) - Power(r, 6)) * r_Y - 2 * G * M * x[2] * (a * x[1] + x[0] * r) * (3 * Power(a, 2) * Power(x[2], 2) * Power(r, 2) - Power(r, 6)) * r_X) - 4 * G * M * x[2] * x[7] * x[6] * Power(r, 3) * (Power(a, 2) + Power(r, 2)) * (-(r * Power(Power(a, 2) + Power(r, 2), 3) * (2 * Power(a, 2) * x[2] * r - 3 * Power(a, 2) * Power(x[2], 2) * r_X + Power(r, 4) * r_X)) + (a * x[0] - x[1] * r) * (2 * Power(r, 3) * (a * x[0] - x[1] * r) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + x[1] * Power(r, 2) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 3 * r * (-(a * x[0]) + x[1] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + Power(r, 2) * (a * x[0] - x[1] * r) * (Power(a, 2) + Power(r, 2)) * (2 * Power(a, 2) * x[2] + 4 * Power(r, 3) * r_X) + 4 * x[2] * Power(r, 4) * Power(Power(a, 2) + Power(r, 2), 2) * r_Y - 2 * x[2] * Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_Y) + (a * x[1] + x[0] * r) * (2 * Power(r, 3) * (a * x[1] + x[0] * r) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - x[0] * Power(r, 2) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 3 * r * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 2 * Power(r, 2) * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * x[2] + 2 * Power(r, 3) * r_X) - 4 * x[2] * Power(r, 4) * Power(Power(a, 2) + Power(r, 2), 2) * r_X + 2 * x[2] * Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X)) - x[2] * Power(x[6], 2) * (Power(a, 2) + Power(r, 2)) * (4 * G * M * Power(r, 3) * Power(Power(a, 2) + Power(r, 2), 3) * (-(Power(a, 2) * Power(x[2], 2)) + Power(r, 4)) * (r - 2 * x[2] * r_X) + Power(Power(a, 2) + Power(r, 2), 3) * (Power(a, 2) * Power(x[2], 2) - 2 * G * M * Power(x[2], 2) * r + Power(r, 4)) * (2 * Power(r, 5) + Power(a, 2) * Power(x[2], 3) * r_X - 3 * x[2] * Power(r, 4) * r_X) - 2 * G * M * Power(r, 2) * (a * x[0] - x[1] * r) * (2 * Power(a, 4) * x[1] * Power(x[2], 2) * Power(r, 3) - 2 * x[1] * Power(r, 9) + 4 * Power(a, 5) * x[0] * Power(x[2], 3) * r * r_X + 2 * Power(a, 2) * x[2] * Power(r, 5) * (x[1] * x[2] - 2 * a * x[0] * r_X) - 2 * a * Power(r, 7) * (a * x[1] + 4 * x[0] * x[2] * r_X) + Power(a, 6) * Power(x[2], 4) * r_Y + 2 * Power(a, 2) * Power(r, 6) * (a * x[0] + x[1] * x[2] * r_X - 3 * Power(x[2], 2) * r_Y) + Power(r, 8) * (2 * a * x[0] + 6 * x[1] * x[2] * r_X - 3 * Power(x[2], 2) * r_Y) - 2 * Power(a, 4) * Power(x[2], 2) * Power(r, 2) * (a * x[0] + 3 * x[1] * x[2] * r_X - Power(x[2], 2) * r_Y) + Power(a, 2) * Power(x[2], 2) * Power(r, 4) * (-2 * a * x[0] - 2 * x[1] * x[2] * r_X + (-3 * Power(a, 2) + Power(x[2], 2)) * r_Y)) - 2 * G * M * Power(r, 2) * (a * x[1] + x[0] * r) * (2 * Power(r, 2) * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) - 4 * x[2] * Power(r, 3) * (a * x[1] + x[0] * r) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 2 * x[0] * x[2] * Power(r, 2) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 4 * x[2] * r * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 4 * x[2] * Power(r, 2) * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * x[2] + 2 * Power(r, 3) * r_X) + 4 * Power(x[2], 2) * Power(r, 4) * Power(Power(a, 2) + Power(r, 2), 2) * r_X - Power(x[2], 2) * Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X)) + 2 * x[7] * x[5] * r * (Power(a, 2) + Power(r, 2)) * (-2 * G * M * x[2] * r * Power(Power(a, 2) + Power(r, 2), 3) * (3 * Power(a, 2) * Power(x[2], 2) * Power(r, 2) - Power(r, 6)) * r_Y + (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) - 2 * G * M * Power(x[2], 2) * r + Power(r, 4)) * (2 * Power(r, 3) * (a * x[0] - x[1] * r) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + x[1] * Power(r, 2) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 3 * r * (-(a * x[0]) + x[1] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + Power(r, 2) * (a * x[0] - x[1] * r) * (Power(a, 2) + Power(r, 2)) * (2 * Power(a, 2) * x[2] + 4 * Power(r, 3) * r_X) + 4 * x[2] * Power(r, 4) * Power(Power(a, 2) + Power(r, 2), 2) * r_Y - 2 * x[2] * Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_Y) + 2 * G * M * x[2] * Power(r, 3) * (a * x[1] + x[0] * r) * (2 * Power(a, 3) * Power(r, 5) + 3 * Power(a, 5) * Power(x[2], 2) * (x[1] * r_Y + x[0] * r_X) + Power(a, 3) * Power(x[2], 2) * Power(r, 2) * (x[1] * r_Y + x[0] * r_X) - Power(a, 3) * Power(r, 4) * (x[1] * r_Y + x[0] * r_X) - 3 * a * Power(r, 6) * (x[1] * r_Y + x[0] * r_X) + 2 * Power(a, 4) * Power(x[2], 2) * r * (a + 2 * x[0] * r_Y - 2 * x[1] * r_X) + 2 * Power(a, 2) * Power(x[2], 2) * Power(r, 3) * (a + x[0] * r_Y - x[1] * r_X) + 2 * Power(r, 7) * (a - x[0] * r_Y + x[1] * r_X))) + 2 * x[7] * x[4] * r * (Power(a, 2) + Power(r, 2)) * (-2 * G * M * x[2] * r * Power(Power(a, 2) + Power(r, 2), 3) * (3 * Power(a, 2) * Power(x[2], 2) * Power(r, 2) - Power(r, 6)) * r_X - (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) - 2 * G * M * Power(x[2], 2) * r + Power(r, 4)) * (2 * Power(r, 3) * (a * x[1] + x[0] * r) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - x[0] * Power(r, 2) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 3 * r * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 2 * Power(r, 2) * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * x[2] + 2 * Power(r, 3) * r_X) - 4 * x[2] * Power(r, 4) * Power(Power(a, 2) + Power(r, 2), 2) * r_X + 2 * x[2] * Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X) + 2 * G * M * x[2] * Power(r, 3) * (a * x[0] - x[1] * r) * (2 * Power(a, 3) * Power(r, 5) + 3 * Power(a, 5) * Power(x[2], 2) * (x[1] * r_Y + x[0] * r_X) + Power(a, 3) * Power(x[2], 2) * Power(r, 2) * (x[1] * r_Y + x[0] * r_X) - Power(a, 3) * Power(r, 4) * (x[1] * r_Y + x[0] * r_X) - 3 * a * Power(r, 6) * (x[1] * r_Y + x[0] * r_X) + 2 * Power(a, 4) * Power(x[2], 2) * r * (a + 2 * x[0] * r_Y - 2 * x[1] * r_X) + 2 * Power(a, 2) * Power(x[2], 2) * Power(r, 3) * (a + x[0] * r_Y - x[1] * r_X) + 2 * Power(r, 7) * (a - x[0] * r_Y + x[1] * r_X))) + Power(x[4], 2) * r * (-2 * G * M * x[2] * Power(r, 3) * Power(a * x[1] + x[0] * r, 2) * (4 * Power(r, 4) * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * r_X + 4 * Power(r, 2) * (a * x[1] + x[0] * r) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 3 * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 2 * r * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * (r + x[0] * r_X)) + 4 * G * M * x[2] * Power(r, 3) * Power(Power(a, 2) + Power(r, 2), 2) * (4 * Power(r, 4) * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * r_X + 2 * Power(r, 2) * (a * x[1] + x[0] * r) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 3 * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - r * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * (r + x[0] * r_X)) - (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) - 2 * G * M * Power(x[2], 2) * r + Power(r, 4)) * (4 * Power(r, 3) * Power(a * x[1] + x[0] * r, 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 2 * x[0] * Power(r, 2) * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 3 * r * Power(a * x[1] + x[0] * r, 2) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 2 * Power(r, 2) * Power(a * x[1] + x[0] * r, 2) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * x[2] + 2 * Power(r, 3) * r_X) - 8 * x[2] * Power(r, 4) * (a * x[1] + x[0] * r) * Power(Power(a, 2) + Power(r, 2), 2) * r_X - 4 * x[2] * Power(r, 2) * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 4 * x[2] * (a * x[1] + x[0] * r) * Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 2 * x[2] * r * Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * (r + x[0] * r_X)) - 2 * G * M * x[2] * Power(r, 3) * (a * x[0] - x[1] * r) * (-2 * Power(a, 4) * x[1] * Power(x[2], 2) * Power(r, 3) + 2 * Power(a, 2) * x[1] * (-2 * Power(a, 2) + Power(x[2], 2)) * Power(r, 5) + 2 * x[1] * Power(r, 9) - 3 * Power(a, 6) * x[1] * Power(x[2], 2) * (x[1] * r_Y + 2 * x[0] * r_X) - 2 * a * Power(r, 7) * (a * x[1] - 4 * x[0] * x[1] * r_Y - 4 * (Power(x[0], 2) - Power(x[1], 2)) * r_X) - 4 * Power(a, 5) * Power(x[2], 2) * r * (a * x[1] + 2 * x[0] * x[1] * r_Y + 2 * (Power(x[0], 2) - Power(x[1], 2)) * r_X) + Power(a, 2) * Power(r, 4) * (-6 * a * x[0] * Power(x[2], 2) + (Power(a, 2) * Power(x[1], 2) - Power(x[0], 2) * Power(x[2], 2)) * r_Y + 2 * x[0] * x[1] * (Power(a, 2) + Power(x[2], 2)) * r_X) + Power(a, 2) * Power(r, 6) * (-((Power(x[0], 2) - 5 * Power(x[1], 2)) * r_Y) - 6 * x[0] * (a - 2 * x[1] * r_X)) + Power(a, 4) * Power(x[2], 2) * Power(r, 2) * ((-5 * Power(x[0], 2) + Power(x[1], 2)) * r_Y - 6 * x[0] * (a - 2 * x[1] * r_X)) + 3 * x[0] * Power(r, 8) * (x[0] * r_Y - 2 * (a + x[1] * r_X)))) - Power(x[5], 2) * r * (4 * G * M * x[2] * Power(r, 3) * Power(Power(a, 2) + Power(r, 2), 2) * (Power(r, 8) - 3 * Power(a, 5) * x[0] * Power(x[2], 2) * r_Y + 4 * Power(a, 4) * x[1] * Power(x[2], 2) * r * r_Y + 2 * Power(a, 2) * x[1] * Power(x[2], 2) * Power(r, 3) * r_Y - 2 * x[1] * Power(r, 7) * r_Y + Power(a, 3) * Power(x[2], 2) * Power(r, 2) * (a - x[0] * r_Y) + a * Power(r, 6) * (a + 3 * x[0] * r_Y) + Power(a, 2) * Power(r, 4) * (Power(x[2], 2) + a * x[0] * r_Y)) - 2 * G * M * x[2] * Power(r, 3) * Power(a * x[0] - x[1] * r, 2) * (4 * Power(r, 4) * (a * x[0] - x[1] * r) * (Power(a, 2) + Power(r, 2)) * r_Y + 4 * Power(r, 2) * (a * x[0] - x[1] * r) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_Y - 3 * (a * x[0] - x[1] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_Y + 2 * r * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * (r + x[1] * r_Y)) + (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) - 2 * G * M * Power(x[2], 2) * r + Power(r, 4)) * (4 * Power(r, 3) * Power(a * x[0] - x[1] * r, 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 2 * x[1] * Power(r, 2) * (a * x[0] - x[1] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 3 * r * Power(a * x[0] - x[1] * r, 2) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 2 * Power(r, 2) * Power(a * x[0] - x[1] * r, 2) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * x[2] + 2 * Power(r, 3) * r_X) + 8 * x[2] * Power(r, 4) * (a * x[0] - x[1] * r) * Power(Power(a, 2) + Power(r, 2), 2) * r_Y + 4 * x[2] * Power(r, 2) * (a * x[0] - x[1] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_Y - 4 * x[2] * (a * x[0] - x[1] * r) * Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_Y + 2 * x[2] * r * Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * (r + x[1] * r_Y)) - 2 * G * M * x[2] * Power(r, 3) * (a * x[1] + x[0] * r) * (-2 * Power(a, 4) * x[0] * Power(x[2], 2) * Power(r, 3) + 2 * Power(a, 2) * x[0] * (-2 * Power(a, 2) + Power(x[2], 2)) * Power(r, 5) + 2 * x[0] * Power(r, 9) - 3 * Power(a, 6) * x[0] * Power(x[2], 2) * (2 * x[1] * r_Y + x[0] * r_X) + 3 * x[1] * Power(r, 8) * (2 * a - 2 * x[0] * r_Y + x[1] * r_X) + Power(a, 4) * Power(x[2], 2) * Power(r, 2) * (6 * a * x[1] + 12 * x[0] * x[1] * r_Y + (Power(x[0], 2) - 5 * Power(x[1], 2)) * r_X) + Power(a, 2) * Power(r, 6) * (6 * a * x[1] + 12 * x[0] * x[1] * r_Y + (5 * Power(x[0], 2) - Power(x[1], 2)) * r_X) + Power(a, 2) * Power(r, 4) * (6 * a * x[1] * Power(x[2], 2) + 2 * x[0] * x[1] * (Power(a, 2) + Power(x[2], 2)) * r_Y + (Power(a, 2) * Power(x[0], 2) - Power(x[1], 2) * Power(x[2], 2)) * r_X) - 4 * Power(a, 5) * Power(x[2], 2) * r * (2 * (Power(x[0], 2) - Power(x[1], 2)) * r_Y + x[0] * (a - 2 * x[1] * r_X)) - 2 * a * Power(r, 7) * (-4 * (Power(x[0], 2) - Power(x[1], 2)) * r_Y + x[0] * (a + 4 * x[1] * r_X)))) - 2 * x[4] * x[5] * r * (2 * G * M * x[2] * Power(r, 3) * Power(a * x[1] + x[0] * r, 2) * (4 * Power(r, 4) * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * r_Y + 4 * Power(r, 2) * (a * x[1] + x[0] * r) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_Y - 3 * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_Y - 2 * r * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * (a + x[0] * r_Y)) + 2 * G * M * x[2] * Power(r, 3) * Power(Power(a, 2) + Power(r, 2), 2) * ((3 * Power(a, 5) * x[1] * Power(x[2], 2) + 4 * Power(a, 4) * x[0] * Power(x[2], 2) * r + Power(a, 3) * x[1] * Power(x[2], 2) * Power(r, 2) + 2 * Power(a, 2) * x[0] * Power(x[2], 2) * Power(r, 3) - Power(a, 3) * x[1] * Power(r, 4) - 3 * a * x[1] * Power(r, 6) - 2 * x[0] * Power(r, 7)) * r_Y + (-3 * Power(a, 5) * x[0] * Power(x[2], 2) + 4 * Power(a, 4) * x[1] * Power(x[2], 2) * r - Power(a, 3) * x[0] * Power(x[2], 2) * Power(r, 2) + 2 * Power(a, 2) * x[1] * Power(x[2], 2) * Power(r, 3) + Power(a, 3) * x[0] * Power(r, 4) + 3 * a * x[0] * Power(r, 6) - 2 * x[1] * Power(r, 7)) * r_X) - 2 * G * M * x[2] * Power(r, 3) * Power(a * x[0] - x[1] * r, 2) * (4 * Power(r, 4) * (a * x[0] - x[1] * r) * (Power(a, 2) + Power(r, 2)) * r_X + 4 * Power(r, 2) * (a * x[0] - x[1] * r) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 3 * (a * x[0] - x[1] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 2 * r * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * (a - x[1] * r_X)) - (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) - 2 * G * M * Power(x[2], 2) * r + Power(r, 4)) * (2 * Power(a, 5) * x[2] * Power(r, 4) * (x[1] * r_Y - x[0] * r_X) + 2 * Power(a, 7) * Power(x[2], 3) * (-(x[1] * r_Y) + x[0] * r_X) - 3 * Power(a, 6) * Power(x[2], 2) * r * (x[0] * x[1] * r_X + x[0] * x[2] * r_Y + x[1] * x[2] * r_X) + 2 * Power(a, 5) * x[2] * Power(r, 2) * (a * x[0] * x[1] + 2 * (-Power(x[0], 2) + Power(x[1], 2)) * x[2] * r_X - x[1] * Power(x[2], 2) * r_Y + x[0] * Power(x[2], 2) * r_X) + 2 * Power(a, 4) * x[2] * Power(r, 3) * (a * Power(x[0], 2) - a * Power(x[1], 2) + 3 * x[0] * x[1] * x[2] * r_X - 2 * x[0] * Power(x[2], 2) * r_Y - 2 * x[1] * Power(x[2], 2) * r_X) - 2 * Power(a, 2) * x[2] * Power(r, 6) * (-3 * a * x[1] * r_Y + x[0] * (x[1] + 3 * a * r_X)) + 4 * a * Power(r, 8) * ((Power(x[0], 2) - Power(x[1], 2)) * r_X + x[2] * (x[1] * r_Y - x[0] * r_X)) + 2 * Power(a, 2) * Power(r, 7) * (3 * x[0] * x[1] * r_X + 2 * x[2] * (x[0] * r_Y + x[1] * r_X)) + Power(r, 9) * (-3 * x[0] * x[1] * r_X + 3 * x[2] * (x[0] * r_Y + x[1] * r_X)) + Power(a, 2) * Power(r, 5) * (x[0] * x[1] * (Power(a, 2) + Power(x[2], 2)) * r_X + x[2] * (2 * a * (Power(x[0], 2) - Power(x[1], 2)) + x[0] * (Power(a, 2) - Power(x[2], 2)) * r_Y + x[1] * (Power(a, 2) - Power(x[2], 2)) * r_X)))) + 2 * x[2] * x[5] * x[6] * (2 * G * M * Power(r, 4) * Power(a * x[0] - x[1] * r, 2) * (4 * Power(r, 2) * (a * x[0] - x[1] * r) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 2 * x[1] * r * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 3 * (a * x[0] - x[1] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + r * (a * x[0] - x[1] * r) * (Power(a, 2) + Power(r, 2)) * (2 * Power(a, 2) * x[2] + 4 * Power(r, 3) * r_X)) - x[2] * Power(Power(a, 2) + Power(r, 2), 4) * (Power(a, 2) * Power(x[2], 2) - 3 * Power(r, 4)) * (Power(a, 2) * Power(x[2], 2) - 2 * G * M * Power(x[2], 2) * r + Power(r, 4)) * r_Y - 2 * G * M * Power(r, 3) * Power(Power(a, 2) + Power(r, 2), 2) * (2 * Power(r, 3) * (a * x[0] - x[1] * r) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + x[1] * Power(r, 2) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 3 * r * (-(a * x[0]) + x[1] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + Power(r, 2) * (a * x[0] - x[1] * r) * (Power(a, 2) + Power(r, 2)) * (2 * Power(a, 2) * x[2] + 4 * Power(r, 3) * r_X) - 4 * x[2] * Power(r, 4) * Power(Power(a, 2) + Power(r, 2), 2) * r_Y + 2 * x[2] * Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_Y) + 2 * G * M * Power(r, 3) * (a * x[1] + x[0] * r) * (2 * Power(a, 7) * Power(x[2], 3) * (x[1] * r_Y + x[0] * r_X) - 2 * Power(a, 5) * x[2] * Power(r, 4) * (x[1] * r_Y + x[0] * r_X) + 2 * Power(a, 5) * x[2] * Power(r, 2) * (a * x[0] * x[1] + 2 * (-Power(x[0], 2) + Power(x[1], 2)) * x[2] * r_X + x[1] * Power(x[2], 2) * r_Y + x[0] * Power(x[2], 2) * r_X) + 2 * Power(a, 4) * x[2] * Power(r, 3) * (a * Power(x[0], 2) - a * Power(x[1], 2) + 2 * a * Power(x[2], 2) + 3 * x[0] * x[1] * x[2] * r_X + 2 * x[0] * Power(x[2], 2) * r_Y - 2 * x[1] * Power(x[2], 2) * r_X) - 2 * Power(a, 2) * x[2] * Power(r, 6) * (3 * a * x[1] * r_Y + x[0] * (x[1] + 3 * a * r_X)) + 4 * a * Power(r, 8) * ((Power(x[0], 2) - Power(x[1], 2)) * r_X - x[2] * (x[1] * r_Y + x[0] * r_X)) + Power(a, 6) * Power(x[2], 2) * r * (-3 * x[0] * x[1] * r_X + x[2] * (2 * a + 3 * x[0] * r_Y - 3 * x[1] * r_X)) + 2 * Power(a, 2) * Power(r, 7) * (3 * x[0] * x[1] * r_X + 2 * x[2] * (a - x[0] * r_Y + x[1] * r_X)) + Power(r, 9) * (-3 * x[0] * x[1] * r_X + x[2] * (2 * a - 3 * x[0] * r_Y + 3 * x[1] * r_X)) + Power(a, 2) * Power(r, 5) * (x[0] * x[1] * (Power(a, 2) + Power(x[2], 2)) * r_X + x[2] * (2 * a * (Power(a, 2) + Power(x[0], 2) - Power(x[1], 2) + Power(x[2], 2)) + x[0] * (-Power(a, 2) + Power(x[2], 2)) * r_Y + x[1] * (Power(a, 2) - Power(x[2], 2)) * r_X)))) - 2 * x[2] * x[4] * x[6] * (2 * G * M * Power(r, 4) * Power(a * x[1] + x[0] * r, 2) * (4 * Power(r, 2) * (a * x[1] + x[0] * r) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 2 * x[0] * r * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 3 * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 2 * r * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * x[2] + 2 * Power(r, 3) * r_X)) + x[2] * Power(Power(a, 2) + Power(r, 2), 4) * (Power(a, 2) * Power(x[2], 2) - 3 * Power(r, 4)) * (Power(a, 2) * Power(x[2], 2) - 2 * G * M * Power(x[2], 2) * r + Power(r, 4)) * r_X - 2 * G * M * Power(r, 3) * Power(Power(a, 2) + Power(r, 2), 2) * (2 * Power(r, 3) * (a * x[1] + x[0] * r) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - x[0] * Power(r, 2) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X - 3 * r * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X + 2 * Power(r, 2) * (a * x[1] + x[0] * r) * (Power(a, 2) + Power(r, 2)) * (Power(a, 2) * x[2] + 2 * Power(r, 3) * r_X) + 4 * x[2] * Power(r, 4) * Power(Power(a, 2) + Power(r, 2), 2) * r_X - 2 * x[2] * Power(Power(a, 2) + Power(r, 2), 2) * (Power(a, 2) * Power(x[2], 2) + Power(r, 4)) * r_X) + 2 * G * M * Power(r, 3) * (a * x[0] - x[1] * r) * (-2 * Power(a, 7) * Power(x[2], 3) * (x[1] * r_Y + x[0] * r_X) + 2 * Power(a, 5) * x[2] * Power(r, 4) * (x[1] * r_Y + x[0] * r_X) + 2 * Power(a, 2) * x[2] * Power(r, 6) * (-(x[0] * x[1]) + 3 * a * x[1] * r_Y + 3 * a * x[0] * r_X) + 2 * Power(a, 5) * x[2] * Power(r, 2) * (a * x[0] * x[1] + 2 * (-Power(x[0], 2) + Power(x[1], 2)) * x[2] * r_X - x[1] * Power(x[2], 2) * r_Y - x[0] * Power(x[2], 2) * r_X) + 2 * Power(a, 4) * x[2] * Power(r, 3) * (a * Power(x[0], 2) - a * Power(x[1], 2) - 2 * a * Power(x[2], 2) + 3 * x[0] * x[1] * x[2] * r_X - 2 * x[0] * Power(x[2], 2) * r_Y + 2 * x[1] * Power(x[2], 2) * r_X) + 4 * a * Power(r, 8) * ((Power(x[0], 2) - Power(x[1], 2)) * r_X + x[2] * (x[1] * r_Y + x[0] * r_X)) - Power(a, 6) * Power(x[2], 2) * r * (3 * x[0] * x[1] * r_X + x[2] * (2 * a + 3 * x[0] * r_Y - 3 * x[1] * r_X)) + 2 * Power(a, 2) * Power(r, 7) * (3 * x[0] * x[1] * r_X - 2 * x[2] * (a - x[0] * r_Y + x[1] * r_X)) - Power(r, 9) * (3 * x[0] * x[1] * r_X + x[2] * (2 * a - 3 * x[0] * r_Y + 3 * x[1] * r_X)) + Power(a, 2) * Power(r, 5) * (x[0] * x[1] * (Power(a, 2) + Power(x[2], 2)) * r_X - x[2] * (2 * a * (Power(a, 2) - Power(x[0], 2) + Power(x[1], 2) + Power(x[2], 2)) + x[0] * (-Power(a, 2) + Power(x[2], 2)) * r_Y + x[1] * (Power(a, 2) - Power(x[2], 2)) * r_X)))))) / (Power(Power(a, 2) + Power(r, 2), 4) * Power(Power(a, 2) * Power(x[2], 2) + Power(r, 4), 3));
}






#endif